{"version":3,"sources":["components/FavoritesForm/FavoritesForm.module.css","screens/FavoritesScreen/FavoritesScreen.module.css","components/Header/Header.module.css","firebaseInit.ts","api/firebase.ts","store/favoritesSlice.ts","store/userSlice.ts","api/youtube.ts","store/youtubeSearchSlice.ts","store/routeSlice.ts","components/Logo.tsx","components/Header/Header.tsx","components/LoginForm/LoginForm.tsx","components/SearchResults/SearchResults.tsx","components/FavoritesForm/FavoritesForm.tsx","screens/LoginScreen/LoginScreen.tsx","screens/SearchScreen/SearchScreen.tsx","screens/FavoritesScreen/FavoritesScreen.tsx","screens/NotFoundScreen/NotFoundScreen.tsx","router/index.tsx","router/useRouteGuard.ts","App.tsx","store/index.ts","index.tsx","components/SearchResults/SearchResults.module.css","components/LoginForm/LoginForm.module.css","screens/SearchScreen/SearchScreen.module.css"],"names":["module","exports","dataBase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","auth","getAuth","setPersistence","browserLocalPersistence","userAuth","data","a","isSignedForm","createUserWithEmailAndPassword","userEmail","password","signInWithEmailAndPassword","user","uid","saveFavoritesToDb","favorites","setDoc","doc","userId","getFavoritesFromDb","getDoc","saveFavoritesToDbThunk","createAsyncThunk","rejectWithValue","response","code","getFavoritesFromDbThunk","favoritesSlice","createSlice","name","initialState","updateDb","isLoading","isError","reducers","setFavorites","state","action","payload","favorite","query","title","id","order","resultsPerPage","push","deleteFavoriteItem","filter","item","editFavoriteItem","map","setFavoritesToInitialState","extraReducers","builder","addCase","pending","fulfilled","message","success","rejected","error","actions","localStorage","getItem","userAuthThunk","userSlice","setUserId","setItem","instance","axios","create","baseURL","params","part","key","process","q","maxResults","type","getVideos","get","getVideosStats","videoId","searchVideos","searchVideosStats","youtubeSearchSlice","videos","totalCount","queryStatus","errorMessage","videoIdList","statsQueryStatus","isQueryInFavorites","setQuery","setIsQueryInFavorites","value","logOut","pageInfo","totalResults","items","v","snippet","channelTitle","description","channelId","thumbnail","width","thumbnails","medium","height","url","forEach","video","idx","arr","length","viewCount","el","statistics","console","log","routeSlice","currentRoute","setCurrentRoute","LogoIcon","viewBox","fill","xmlns","fillRule","clipRule","d","Header","reduxDispatch","useDispatch","useSelector","route","pathname","useLocation","useEffect","align","wrap","flex","className","styles","logoWrapper","mode","selectedKeys","style","borderColor","Item","to","navlink","onClick","signOut","removeItem","stylesForInput","fontFamily","fontSize","lineHeight","borderRadius","padding","stylesForBtn","LoginForm","onSubmit","onSwitchChange","initialValues","useState","passwordInputType","setPasswordInputType","passwordInputRef","useRef","wrapper","form","layout","onFinish","label","rules","required","input","inputWrapper","EyeInvisibleOutlined","icon","current","focus","EyeOutlined","passwInput","ref","valuePropName","onChange","btnWrapper","htmlType","numFormatter","Intl","NumberFormat","declOfNum","number","words","x","Math","abs","y","SearchResults","search","youtubeSearch","videoList","viewType","setViewType","searchInfoWrapper","Text","queryTitle","strong","videosCount","color","format","disabled","UnorderedListOutlined","AppstoreOutlined","itemLayout","dataSource","renderItem","Meta","avatar","Link","href","target","preview","src","alt","Paragraph","ellipsis","rows","expandable","marginBottom","videoLink","viewsCount","channelLink","Number","round","videoListItem","bodyStyle","backgroundColor","border","cover","FavoritesForm","onCancel","editMode","sliderInputValue","setSliderInputValue","Form","useForm","buttonTexts","useMemo","cancelBtn","okBtn","resetFields","placeholder","size","suffixIcon","CaretDownOutlined","Option","marginRight","min","max","ghost","LoginScreen","routeHistory","useHistory","setIsSignedForm","justify","xs","span","sm","md","lg","xxl","maxWidth","isInFavorites","searchQuery","trim","openNotificationWithIcon","placement","notification","SearchScreen","isModalVisible","setIsModalVisible","setSearchQuery","checkIsQueryInFavorite","minHeight","searchResultTitle","searchTitle","toolTipWrapper","display","marginTop","zIndex","HeartFilled","visibility","HeartOutlined","defaultValue","e","searchBtn","spinning","indicator","LoadingOutlined","position","top","left","visible","closable","footer","textAlign","margin","values","uuidV4","confirm","Modal","FavoritesScreen","activeItem","setActiveItem","makeSearch","searchInput","paddingTop","spin","favoritesList","flexWrap","editLink","deleteLink","ExclamationCircleOutlined","okText","cancelText","onOk","itemTitle","favoriteItem","content","relevance","date","rating","trimQuery","NotFoundScreen","RouterView","useRouteGuard","exact","path","component","App","background","Content","store","configureStore","reducer","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.48a52361.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FavoritesForm_label__2DGU2\",\"btnWrapper\":\"FavoritesForm_btnWrapper__1Op4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"FavoritesScreen_title__2_lDt\",\"favoritesList\":\"FavoritesScreen_favoritesList__1RtFm\",\"itemTitle\":\"FavoritesScreen_itemTitle__3l2pI\",\"editLink\":\"FavoritesScreen_editLink__1Hd4s\",\"deleteLink\":\"FavoritesScreen_deleteLink__ia70Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoWrapper\":\"Header_logoWrapper__20zeq\",\"navlink\":\"Header_navlink__RNhPn\",\"menuItem\":\"Header_menuItem__3F_MM\"};","import { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\n\nexport const firebaseApp = initializeApp({\n  apiKey: 'AIzaSyByiMgQXzByXmCRjcsTm5RCadKOQ9SiiPA',\n  authDomain: 'search-app-9c54b.firebaseapp.com',\n  projectId: 'search-app-9c54b',\n  storageBucket: 'search-app-9c54b.appspot.com',\n  messagingSenderId: '533183716632',\n  appId: '1:533183716632:web:a7efb5b5da647a9398526d',\n});\n\nexport const dataBase = getFirestore();\n","import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, setPersistence, browserLocalPersistence } from 'firebase/auth';\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\n\nimport { IUserLoginInput, IFirebaseLoginResponse, IFavoritesFirebase } from './types';\n\nimport { dataBase } from '../firebaseInit';\n\nconst auth = getAuth();\n\nsetPersistence(auth, browserLocalPersistence);\n\nexport const userAuth = async (data: IUserLoginInput): Promise<IFirebaseLoginResponse> => {\n  const { user } = data.isSignedForm ?\n    await createUserWithEmailAndPassword(auth, data.userEmail, data.password) :\n    await signInWithEmailAndPassword(auth, data.userEmail, data.password);\n\n  return { uid: user.uid };\n};\n\nexport const saveFavoritesToDb = async (favorites: IFavoritesFirebase) => {\n  await setDoc(doc(dataBase, 'users', favorites.userId), { favorites: favorites.favorites });\n};\n\nexport const getFavoritesFromDb = async (userId: string) => {\n  const favorites = await getDoc(doc(dataBase, 'users', userId));\n  return favorites.data();\n};\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport { message } from 'antd';\n\nimport { getFavoritesFromDb, saveFavoritesToDb } from '../api/firebase';\n\nimport { IFavoritesInput, IFavoritesFirebase } from '../api/types';\n\ninterface IFavoritesSlice {\n  favorites: IFavoritesInput[];\n  updateDb: boolean;\n  isLoading: boolean;\n  isError: boolean;\n}\n\nconst initialState = {\n  favorites: [],\n  updateDb: false,\n  isLoading: false,\n  isError: false,\n} as IFavoritesSlice;\n\nexport const saveFavoritesToDbThunk = createAsyncThunk(\n  'user/saveFavoritesToDbThunk',\n  async (favorites: IFavoritesFirebase, { rejectWithValue }) => {\n    try {\n      const response = await saveFavoritesToDb(favorites);\n\n      return response;\n    } catch(err: any) {\n      return rejectWithValue(err.code);\n    }\n  },\n);\n\nexport const getFavoritesFromDbThunk = createAsyncThunk(\n  'user/getFavoritesFromDbThunk',\n  async (userId: string, { rejectWithValue }) => {\n    try {\n      const response = await getFavoritesFromDb(userId);\n\n      return response;\n    } catch(err: any) {\n      return rejectWithValue(err.code);\n    }\n  },\n);\n\nconst favoritesSlice = createSlice({\n  name: 'favorites',\n  initialState,\n  reducers: {\n    setFavorites(state, action: PayloadAction<IFavoritesInput>) {\n      const { query, title, id, order, resultsPerPage } = action.payload;\n      const favorite: IFavoritesInput = {\n        query,\n        title,\n        id,\n        order,\n        resultsPerPage,\n      };\n\n      state.favorites.push(favorite);\n      state.updateDb = true;\n    },\n    deleteFavoriteItem(state, action: PayloadAction<{ id: string }>) {\n      state.favorites = state.favorites.filter(item => item.id !== action.payload.id);\n      state.updateDb = true;\n    },\n    editFavoriteItem(state, action: PayloadAction<IFavoritesInput>) {\n      const { query, title, id, order, resultsPerPage } = action.payload;\n      const favorite: IFavoritesInput = {\n        query,\n        title,\n        id,\n        order,\n        resultsPerPage,\n      };\n\n      state.favorites = state.favorites.map(item => {\n        return item.id === favorite.id ? favorite : item;\n      });\n      state.updateDb = true;\n    },\n    setFavoritesToInitialState(state) {\n      state.favorites = [];\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(saveFavoritesToDbThunk.pending, (state) => {\n      state.isLoading = true;\n      if (state.isError) state.isError = false;\n    });\n    builder.addCase(saveFavoritesToDbThunk.fulfilled, (state) => {\n      message.success('Раздел \"Избранное\" успешно обновлен.');\n      state.isLoading = false;\n      if (state.updateDb) state.updateDb = false;\n    });\n    builder.addCase(saveFavoritesToDbThunk.rejected, (state, action) => {\n      message.error(`Ошибка: ${action.payload}`);\n      state.isLoading = false;\n      state.isError = true;\n      if (state.updateDb) state.updateDb = false;\n    });\n    builder.addCase(getFavoritesFromDbThunk.pending, (state) => {\n      state.isLoading = true;\n      if (state.isError) state.isError = false;\n    });\n    builder.addCase(getFavoritesFromDbThunk.fulfilled, (state, action) => {\n      const payload = action.payload as IFavoritesSlice;\n\n      if (payload) state.favorites = payload.favorites;\n      state.isLoading = false;\n    });\n    builder.addCase(getFavoritesFromDbThunk.rejected, (state, action) => {\n      message.error(`Ошибка: ${action.payload}`);\n      state.isLoading = false;\n      state.isError = true;\n    });\n  },\n});\n\nexport const { setFavorites, deleteFavoriteItem, editFavoriteItem, setFavoritesToInitialState } = favoritesSlice.actions;\nexport default favoritesSlice.reducer;\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport { message } from 'antd';\n\nimport { userAuth } from '../api/firebase';\nimport { IUserLoginInput, IFirebaseLoginResponse } from '../api/types';\n\ninterface IUserState {\n  userId: string;\n}\n\nconst initialState = {\n  userId: localStorage.getItem('authToken') || '',\n} as IUserState;\n\nexport const userAuthThunk = createAsyncThunk(\n  'user/userAuthThunk',\n  async (data: IUserLoginInput, { rejectWithValue }) => {\n    try {\n      const response = await userAuth(data);\n\n      return response;\n    } catch(err: any) {\n      return rejectWithValue(err.code);\n    }\n  },\n);\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUserId(state, action: PayloadAction<string>) {\n      state.userId = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(userAuthThunk.fulfilled, (state, action) => {\n      const payload = action.payload as IFirebaseLoginResponse;\n\n      state.userId = payload.uid;\n      localStorage.setItem('authToken', payload.uid);\n    });\n    builder.addCase(userAuthThunk.rejected, (state, action) => {\n      state.userId = '';\n      message.error(`Ошибка: ${action.payload}`);\n    });\n  },\n});\n\nexport const { setUserId } = userSlice.actions;\nexport default userSlice.reducer;\n","import axios from 'axios';\n\nimport { ISearchVideoInput, ISearchVideoResponse, ISearchVideoStatsResponse } from './types';\n\nconst instance = axios.create({\n  baseURL: 'https://www.googleapis.com/youtube/v3/',\n  params: {\n    part: 'snippet',\n    key: process.env.REACT_APP_YOUTUBE_KEY,\n    q: '',\n    order: 'relevance',\n    maxResults: 12,\n    resultsPerPage: 12,\n    type: 'video',\n  },\n});\n\nexport const getVideos = async (params: ISearchVideoInput): Promise<ISearchVideoResponse> => {\n  const { data } = await instance.get('/search', {\n    params,\n  });\n\n  return data;\n};\n\nexport const getVideosStats = async (videoId: string): Promise<ISearchVideoStatsResponse> => {\n  const { data } = await axios.get(`https://www.googleapis.com/youtube/v3/videos?key=${process.env.REACT_APP_YOUTUBE_KEY}&fields=items(snippet(title,channelTitle,publishedAt),id,statistics(viewCount))&part=snippet,statistics&id=${videoId}`);\n\n  return data;\n};\n","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\n\nimport { getVideos, getVideosStats } from '../api/youtube';\nimport { ISearchVideoInput, ISearchVideoResponse, ISearchVideoStatsResponse } from '../api/types';\n\nexport const searchVideos = createAsyncThunk(\n  'youtubeSearch/searchVideos',\n  async (params: ISearchVideoInput, { rejectWithValue }) => {\n    try {\n      const response = await getVideos(params);\n\n      return response;\n    } catch(err: any) {\n      return rejectWithValue(err.message);\n    }\n  },\n);\n\nexport const searchVideosStats = createAsyncThunk(\n  'youtubeSearch/getVideosStats',\n  async (videoId: string, { rejectWithValue }) => {\n    try {\n      const response = await getVideosStats(videoId);\n\n      return response;\n    } catch(err: any) {\n      return rejectWithValue(err.message);\n    }\n  },\n);\ninterface IVideoItem {\n  videoId: string;\n  title: string;\n  description: string;\n  channelTitle: string;\n  channelId: string;\n  thumbnail: {\n    width: number;\n    height: number;\n    url: string;\n  }\n\n  viewCount?: string;\n}\ninterface IYoutubeSearchState {\n  videos: IVideoItem[];\n  totalCount: number;\n  isLoading: boolean;\n  query: string;\n  queryStatus: string;\n  errorMessage: string;\n  videoIdList: string;\n  statsQueryStatus: string;\n  isQueryInFavorites: boolean;\n}\n\nconst initialState = {\n  videos: [],\n  totalCount: 0,\n  isLoading: false,\n  query: '',\n  queryStatus: '',\n  errorMessage: '',\n  videoIdList: '',\n  statsQueryStatus: '',\n  isQueryInFavorites: false,\n} as IYoutubeSearchState;\n\nconst youtubeSearchSlice = createSlice({\n  name: 'youtubeSearch',\n  initialState,\n  reducers: {\n    setQuery(state, action: PayloadAction<{ query: string }>) {\n      state.query = action.payload.query;\n    },\n    setIsQueryInFavorites(state, action: PayloadAction<{ value: boolean }>) {\n      state.isQueryInFavorites = action.payload.value;\n    },\n    logOut(state) {\n      state.videos = [];\n      state.totalCount = 0;\n      state.isLoading = false;\n      state.query = '';\n      state.queryStatus = '';\n      state.errorMessage = '';\n      state.videoIdList = '';\n      state.statsQueryStatus = '';\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(searchVideos.pending, (state) => {\n      state.isLoading = true;\n      state.queryStatus = 'pending';\n      state.errorMessage = '';\n    });\n    builder.addCase(searchVideos.fulfilled, (state, action) => {\n      const payload = action.payload as ISearchVideoResponse;\n\n      state.totalCount = payload.pageInfo.totalResults;\n      state.videos = payload.items.map((v) => ({\n        videoId: v.id.videoId,\n        title: v.snippet.channelTitle,\n        description: v.snippet.description,\n        channelTitle: v.snippet.channelTitle,\n        channelId: v.snippet.channelId,\n        thumbnail: {\n          width: v.snippet.thumbnails.medium.width,\n          height: v.snippet.thumbnails.medium.height,\n          url: v.snippet.thumbnails.medium.url,\n        },\n      }));\n      state.videoIdList = '';\n      state.videos.forEach((video, idx, arr) => {\n        idx < arr.length - 1 ? state.videoIdList += (video.videoId + ',') : state.videoIdList += video.videoId;\n      });\n\n      state.isLoading = false;\n      state.queryStatus = 'fulfilled';\n      state.errorMessage = '';\n    });\n    builder.addCase(searchVideos.rejected, (state, action) => {\n      state.isLoading = false;\n      state.queryStatus = 'rejected';\n      state.errorMessage = `${action.payload}`;\n    });\n    builder.addCase(searchVideosStats.pending, (state) => {\n      state.statsQueryStatus = 'pending';\n    });\n    builder.addCase(searchVideosStats.fulfilled, (state, action) => {\n      const payload = action.payload as ISearchVideoStatsResponse;\n      state.videos.map(video => {\n        video.viewCount = payload.items.filter(el => el.id === video.videoId)[0]?.statistics.viewCount;\n        return video;\n      });\n      state.statsQueryStatus = 'fulfilled';\n    });\n    builder.addCase(searchVideosStats.rejected, (state, action) => {\n      state.statsQueryStatus = 'rejected';\n      console.log('view counts recive error', action.payload);\n    });\n  },\n});\n\nexport const { setQuery, logOut, setIsQueryInFavorites } = youtubeSearchSlice.actions;\nexport default youtubeSearchSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IRouteState {\n  currentRoute: string;\n}\n\nconst initialState = {\n  currentRoute: '',\n} as IRouteState;\n\nconst routeSlice = createSlice({\n  name: 'route',\n  initialState,\n  reducers: {\n    setCurrentRoute(state, action: PayloadAction<string>) {\n      state.currentRoute = action.payload;\n    },\n  },\n});\n\nexport const { setCurrentRoute } = routeSlice.actions;\nexport default routeSlice.reducer;\n","import { FC } from 'react';\n\ninterface LogoIconProps {\n  width?: number;\n  height?: number;\n}\n\nexport const LogoIcon: FC<LogoIconProps> = ({\n  width = 88,\n  height = 88,\n}) => {\n  return (<svg\n    width={width}\n    height={height}\n    viewBox=\"0 0 88 88\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M59.1488 43.5667L24.683 60.9559V79.399L59.1488 62.0098V43.5667Z\"\n      fill=\"#1390E5\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M24.683 26.1787L59.1487 43.5679V62.0111L24.683 44.6218V26.1787Z\"\n      fill=\"#1180CB\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M59.1488 8.79071L24.683 26.1799V44.623L59.1488 27.2338V8.79071Z\"\n      fill=\"#35A2EC\"\n    />\n  </svg>);\n};\n","import { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { getAuth, signOut } from 'firebase/auth';\nimport { Menu, Row, Col } from 'antd';\n\nimport { RootState } from '../../store';\nimport { setUserId } from '../../store/userSlice';\nimport { logOut } from '../../store/youtubeSearchSlice';\nimport { setFavoritesToInitialState } from '../../store/favoritesSlice';\nimport { setCurrentRoute } from '../../store/routeSlice';\n\nimport { LogoIcon } from '../Logo';\n\nimport styles from './Header.module.css';\n\ninterface HeaderProps {}\n\nconst Header: FC<HeaderProps> = () => {\n  const reduxDispatch = useDispatch();\n  const { currentRoute } = useSelector((state: RootState) => state.route);\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    if (pathname === currentRoute) return;\n    reduxDispatch(setCurrentRoute(pathname));\n  }, [pathname, currentRoute, reduxDispatch]);\n\n  return (\n    <Row\n      align=\"middle\"\n      wrap={false}\n    >\n      <Col flex='none'>\n        <div className={styles.logoWrapper}>\n          <LogoIcon\n            width={44}\n            height={44}\n          />\n        </div>\n      </Col>\n      <Col flex='auto'>\n        <Menu\n          mode='horizontal'\n          selectedKeys={[currentRoute]}\n          style={{ borderColor: 'transparent' }}\n        >\n          <Menu.Item key='/'>\n            <NavLink\n              to={'/'}\n              className={styles.navlink}\n              onClick={() => reduxDispatch(setCurrentRoute('/'))}\n            >\n              Поиск\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key='/favorites'>\n            <NavLink\n              to={'/favorites'}\n              className={styles.navlink}\n              onClick={() => reduxDispatch(setCurrentRoute('/favorites'))}\n            >\n              Избранное\n            </NavLink>\n          </Menu.Item>\n        </Menu>\n      </Col>\n      <Col flex='none'>\n        <Menu\n          mode='horizontal'\n          style={{ borderColor: 'transparent' }}\n        >\n          <Menu.Item key='logout'>\n            <NavLink\n              className={styles.navlink}\n              to={'/login'}\n              onClick={() => {\n                signOut(getAuth());\n                localStorage.removeItem('authToken');\n                reduxDispatch(setUserId(''));\n                reduxDispatch(logOut());\n                reduxDispatch(setFavoritesToInitialState());\n              }}\n            >\n              Выйти\n            </NavLink>\n          </Menu.Item>\n        </Menu>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Header;\n","import { FC, useState, useRef } from 'react';\nimport { Form, Input, Switch, Button } from 'antd';\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\n\nimport { IUserLoginInput } from '../../api/types';\n\nimport { LogoIcon } from '../Logo';\n\nimport styles from './LoginForm.module.css';\n\ninterface LoginFormProps {\n  onSubmit: (values: IUserLoginInput) => void;\n  onSwitchChange: () => void;\n  initialValues: IUserLoginInput;\n  isSignedForm: boolean;\n}\n\nconst stylesForInput = {\n  fontFamily: 'Roboto, sans-serif',\n  fontSize: 20,\n  lineHeight: 0,\n  borderRadius: 5,\n  padding: '12px 15px',\n};\n\nconst stylesForBtn = {\n  fontFamily: 'Roboto, sans-serif',\n  fontSize: 20,\n  lineHeight: '100%',\n  width: 170,\n  height: 50,\n  borderRadius: 5,\n};\n\nconst LoginForm: FC<LoginFormProps> = ({\n  onSubmit,\n  onSwitchChange,\n  initialValues,\n  isSignedForm,\n}) => {\n  const [passwordInputType, setPasswordInputType] = useState('password');\n  const passwordInputRef = useRef<Input>(null);\n\n  return (\n    <div className={styles.wrapper}>\n      <LogoIcon />\n      <h3 className={styles.title}>{isSignedForm ? 'Регистрация и вход' : 'Вход'}</h3>\n      <Form\n        className={styles.form}\n        name=\"basic\"\n        initialValues={initialValues}\n        layout=\"vertical\"\n        onFinish={onSubmit}\n      >\n        <span className={styles.label}>Логин (Email)</span>\n        <Form.Item\n          name=\"userEmail\"\n          rules={[{ required: true, message: 'Введите логин' }]}\n        >\n          <Input\n            className={styles.input}\n            style={stylesForInput}\n          />\n        </Form.Item>\n\n        <span className={styles.label}>Пароль</span>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: 'Введите пароль' }]}\n        >\n          <div className={styles.inputWrapper}>\n            {\n              passwordInputType === 'password' ?\n                <EyeInvisibleOutlined\n                  className={styles.icon}\n                  onClick={() => {\n                    setPasswordInputType('text');\n                    passwordInputRef.current?.focus();\n                  }}\n                /> :\n                <EyeOutlined\n                  className={styles.icon}\n                  onClick={() =>{\n                    setPasswordInputType('password');\n                    passwordInputRef.current?.focus();\n                  }}\n                />\n            }\n            <Input\n              className={styles.passwInput}\n              style={stylesForInput}\n              type={passwordInputType}\n              ref={passwordInputRef}\n            />\n          </div>\n        </Form.Item>\n\n        <span className={styles.label}>Регистрация нового пользователя и вход</span>\n        <Form.Item\n          name='isSignedForm'\n          valuePropName='checked'>\n          <Switch onChange={onSwitchChange}/>\n        </Form.Item>\n\n        <Form.Item >\n          <div className={styles.btnWrapper}>\n            <Button\n              style={stylesForBtn}\n              type=\"primary\"\n              htmlType=\"submit\"\n            >\n              {isSignedForm ? 'Регистрация' : 'Вход'}\n            </Button>\n          </div>\n        </Form.Item>\n\n      </Form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import { FC, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { List, Image, Typography,Row, Col, Space, Button, Card } from 'antd';\nimport { UnorderedListOutlined, AppstoreOutlined } from '@ant-design/icons';\n\nimport { RootState } from '../../store';\n\nimport styles from './SearchResults.module.css';\n\ninterface SearchResultsProps {}\n\nconst numFormatter = new Intl.NumberFormat('ru');\n\nfunction declOfNum (number: number, words: string[]): string {\n  const x = Math.abs(number) % 100;\n  const y = x % 10;\n  if (x > 10 && x < 20) { return words[2]; }\n  if (y > 1 && y < 5) { return words[1]; }\n  if (y === 1) { return words[0]; }\n  return words[2];\n}\n\nconst SearchResults: FC<SearchResultsProps> = () => {\n  const search = useSelector((state: RootState) => state.youtubeSearch);\n  const videoList = useSelector((state: RootState) => state.youtubeSearch.videos);\n  const [viewType, setViewType] = useState('list');\n\n  if (search.queryStatus !== 'fulfilled' && search.statsQueryStatus !== 'fulfilled') return null;\n  return (\n    <div className={styles.wrapper}>\n      <Row className={styles.searchInfoWrapper}>\n        <Col flex='auto'>\n          <Typography.Text className={styles.queryTitle}>Видео по запросу</Typography.Text>\n          <Typography.Text\n            className={styles.queryTitle}\n            strong\n          >\n            {`«${search.query}»`}\n          </Typography.Text>\n          <Typography.Text\n            className={styles.videosCount}\n            style={{ color: 'rgba(23, 23, 25, 0.3)' }}\n          >\n            {numFormatter.format(search.totalCount)}\n          </Typography.Text>\n        </Col>\n        <Col flex='60px'>\n          <Space>\n            <Button\n              type='text'\n              style={{\n                padding: 5,\n                color: viewType === 'list' ? '#000000' : 'rgba(23, 23, 25, 0.3)',\n              }}\n              disabled={viewType === 'list'}\n              onClick = {() => setViewType('list')}\n            >\n              <UnorderedListOutlined style={{ fontSize: 20 }} />\n            </Button>\n            <Button\n              type='text'\n              style={{\n                padding: 5,\n                color: viewType === 'cards' ? '#000000' : 'rgba(23, 23, 25, 0.3)',\n              }}\n              disabled={viewType === 'cards'}\n              onClick = {() => setViewType('cards')}\n            >\n              <AppstoreOutlined style={{ fontSize: 20 }} />\n            </Button>\n          </Space>\n        </Col>\n      </Row>\n      {viewType === 'list' ?\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={videoList}\n          renderItem={item => (\n            <List.Item key={item.videoId}>\n              <List.Item.Meta\n                avatar={\n                  <Typography.Link\n                    href={`https://www.youtube.com/watch?v=${item.videoId}`}\n                    target='_blank'\n                  >\n                    <Image\n                      preview={false}\n                      width={157}\n                      height={88}\n                      src={item.thumbnail.url}\n                      alt='Video preview'\n                    />\n                  </Typography.Link>\n                }\n                title={\n                  <Typography.Paragraph\n                    ellipsis={{ rows: 2, expandable: false }}\n                    style={{ marginBottom: 8 }}\n                  >\n                    <Typography.Link\n                      className={styles.videoLink}\n                      href={`https://www.youtube.com/watch?v=${item.videoId}`}\n                      target='_blank'\n                    >\n                      {item.title} | {item.description}\n                    </Typography.Link>\n                  </Typography.Paragraph>\n                }\n                description={\n                  <Typography.Text\n                    className={styles.viewsCount}\n                    style={{ color: 'rgba(23, 23, 25, 0.3)' }}\n                  >\n                    <Typography.Link\n                      className={styles.channelLink}\n                      href={`https://www.youtube.com/channel/${item.channelId}`}\n                      target='_blank'\n                      style={{ color: 'rgba(23, 23, 25, 0.3)' }}\n                    >\n                      {item.channelTitle}\n                    </Typography.Link>\n                    <br />\n                    {!item.viewCount ? 'Нет данных о количестве просмотров' :\n                      Number(item.viewCount) / 1000 >= 1 ?\n                        `${numFormatter.format(Math.round(Number(item.viewCount) / 1000))} тыс. просмотров` :\n                        `${item.viewCount} ${declOfNum(Number(item.viewCount),['просмотр', 'просмотра', 'просмотров'])}`}\n                  </Typography.Text> }\n              />\n            </List.Item>\n          )}\n        /> :\n        <ul className={styles.videoList}>\n          {videoList.map(video => {\n            return (\n              <li\n                key = {video.videoId}\n                className={styles.videoListItem}\n              >\n                <Card\n                  bodyStyle={{\n                    padding: 0,\n                  }}\n                  style={{\n                    width: 245,\n                    backgroundColor: 'transparent',\n                    border: 'none',\n                  }}\n                  cover={\n                    <Typography.Link\n                      href={`https://www.youtube.com/watch?v=${video.videoId}`}\n                      target='_blank'\n                    >\n                      <Image\n                        preview={false}\n                        width={245}\n                        height={138}\n                        src={video.thumbnail.url}\n                        alt='Video preview'\n                      />\n                    </Typography.Link>\n                  }\n                >\n                  <Card.Meta\n                    description={\n                      <>\n                        <Typography.Paragraph\n                          ellipsis={{ rows: 2, expandable: false }}\n                          style={{ marginBottom: 8 }}\n                        >\n                          <Typography.Link\n                            className={styles.videoLink}\n                            href={`https://www.youtube.com/watch?v=${video.videoId}`}\n                            target='_blank'\n                          >\n                            {video.title} | {video.description}\n                          </Typography.Link>\n                        </Typography.Paragraph>\n                        <Typography.Text\n                          className={styles.viewsCount}\n                          style={{ color: 'rgba(23, 23, 25, 0.3)' }}\n                        >\n                          <Typography.Link\n                            className={styles.channelLink}\n                            href={`https://www.youtube.com/channel/${video.channelId}`}\n                            target='_blank'\n                            style={{ color: 'rgba(23, 23, 25, 0.3)' }}\n                          >\n                            {video.channelTitle}\n                          </Typography.Link>\n                          <br />\n                          {Number(video.viewCount) / 1000 >= 1 ?\n                            `${numFormatter.format(Math.round(Number(video.viewCount) / 1000))} тыс. просмотров` :\n                            `${video.viewCount} ${declOfNum(Number(video.viewCount),['просмотр', 'просмотра', 'просмотров'])}`}\n                        </Typography.Text>\n                      </>\n                    }\n                  />\n                </Card>\n              </li>\n            );\n          })\n          }\n        </ul>\n      }\n    </div>\n  );\n};\n\nexport default SearchResults;\n","import { FC, useState, useEffect, useMemo } from 'react';\nimport { Form, Input, InputNumber, Select, Button, Slider, Col, Row } from 'antd';\nimport { CaretDownOutlined } from '@ant-design/icons';\n\nimport { IFavoritesInput } from '../../api/types';\n\nimport styles from './FavoritesForm.module.css';\n\ninterface FavoritesFormProps {\n  onSubmit: (values: IFavoritesInput) => void;\n  onCancel: () => void;\n  initialValues: IFavoritesInput;\n  editMode?: boolean;\n}\n\nconst stylesForInput = {\n  fontFamily: 'Roboto, sans-serif',\n  lineHeight: 0,\n  fontSize: 20,\n  borderRadius: 5,\n  padding: '12px 15px',\n};\n\nconst stylesForBtn = {\n  fontFamily: 'Roboto, sans-serif',\n  fontSize: 20,\n  lineHeight: '100%',\n  width: 210,\n  height: 50,\n  borderRadius: 5,\n};\n\nconst FavoritesForm: FC<FavoritesFormProps> = ({\n  onSubmit,\n  onCancel,\n  initialValues,\n  editMode = false,\n}) => {\n  const [sliderInputValue, setSliderInputValue] = useState(12);\n  const [form] = Form.useForm();\n  const buttonTexts = useMemo(() => {\n    return editMode ? { cancelBtn: 'Не изменять', okBtn: 'Изменить' } : { cancelBtn: 'Не сохранять', okBtn: 'Сохранить' };\n  }, [editMode]);\n\n  useEffect(() => {\n    form.resetFields();\n    setSliderInputValue(12);\n  }, [form, initialValues]);\n\n  return (\n    <Form\n      form={form}\n      name='saveToFavorites'\n      id='saveToFavorites'\n      initialValues={initialValues}\n      layout='vertical'\n      onFinish={onSubmit}\n    >\n      <span className={styles.label}>Запрос</span>\n      <Form.Item\n        name='query'\n        rules={[{ required: true, message: 'Введите запрос' }]}\n      >\n        <Input\n          style={stylesForInput}\n          type='text'\n          disabled={!editMode}\n        />\n      </Form.Item>\n\n      <span className={styles.label}><span style={{ color: 'red' }}>* </span>Название</span>\n      <Form.Item\n        name='title'\n        rules={[{ required: true, message: 'Введите название' }]}\n      >\n        <Input\n          placeholder='Укажите название'\n          style={stylesForInput}\n          type='text'\n        />\n      </Form.Item>\n\n      <span className={styles.label}>Сортировать по</span>\n      <Form.Item name='order'>\n        <Select\n          size='large'\n          style={{\n            fontFamily: 'Roboto, sans-serif',\n            fontSize: 20,\n          }}\n          suffixIcon={<CaretDownOutlined />}\n        >\n          <Select.Option value='relevance'>Без сортировки</Select.Option>\n          <Select.Option value='title'>По названию</Select.Option>\n          <Select.Option value='date'>По дате релиза</Select.Option>\n          <Select.Option value='viewCount'>По количеству просмотров</Select.Option>\n          <Select.Option value='rating'>По рейтингу</Select.Option>\n        </Select>\n      </Form.Item>\n\n      <span className={styles.label}>Максимальное количество</span>\n      <Row align='middle'>\n        <Col flex='auto'>\n          <Form.Item name='resultsPerPage'>\n            <Slider\n              style={{ marginRight: 20 }}\n              min={1}\n              max={50}\n              value={sliderInputValue}\n              onChange={(value) => setSliderInputValue(value)}\n            />\n          </Form.Item>\n        </Col>\n        <Col flex='none'>\n          <Form.Item name='resultsPerPage'>\n            <InputNumber\n              style={{\n                fontFamily: 'Roboto, sans-serif',\n                lineHeight: 0,\n                fontSize: 20,\n                borderRadius: 5,\n                padding: '5px 0px 5px 20px',\n              }}\n              min={1}\n              max={50}\n              size='large'\n              value={sliderInputValue}\n              onChange={(value) => setSliderInputValue(value)}\n            />\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Form.Item >\n        <div className={styles.btnWrapper}>\n          <Button\n            style={stylesForBtn}\n            type='primary'\n            ghost\n            onClick={onCancel}\n          >\n            {buttonTexts.cancelBtn}\n          </Button>\n          <Button\n            style={stylesForBtn}\n            type='primary'\n            htmlType='submit'\n          >\n            {buttonTexts.okBtn}\n          </Button>\n        </div>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default FavoritesForm;\n","import { FC, useEffect, useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RootState } from '../../store';\nimport { userAuthThunk } from '../../store/userSlice';\n\nimport { LoginForm } from '../../components';\nimport { IUserLoginInput } from '../../api/types';\n\ninterface LoginScreenProps {}\n\nconst LoginScreen: FC<LoginScreenProps> = () => {\n  const routeHistory = useHistory();\n  const reduxDispatch = useDispatch();\n  const { userId } = useSelector((state: RootState) => state.user);\n  const [isSignedForm, setIsSignedForm] = useState(false);\n\n  useEffect(() => {\n    if (!userId) return;\n    routeHistory.push('/');\n  }, [routeHistory, userId]);\n\n  const onSubmit = (data: IUserLoginInput) => {\n    reduxDispatch(userAuthThunk(data));\n  };\n\n  const onSwitchChange = () => {\n    setIsSignedForm(!isSignedForm);\n  };\n\n  return (\n    <Row\n      justify=\"center\"\n      align=\"middle\"\n      style={{ height: '100vh' }}\n    >\n      <Col\n        xs={{ span: 23 }}\n        sm={{ span: 22 }}\n        md={{ span: 22 }}\n        lg={{ span: 20 }}\n        xxl={{ span: 16 }}\n        style={{ maxWidth: 510 }}\n      >\n        <LoginForm\n          initialValues={{ userEmail: '', password: '', isSignedForm: false }}\n          onSubmit={onSubmit}\n          onSwitchChange={onSwitchChange}\n          isSignedForm={isSignedForm}\n        />\n      </Col>\n    </Row>\n  );\n};\n\nexport default LoginScreen;\n","import { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Input, Form, Button, Row, Col, Modal, Tooltip, Typography, notification, Spin, Empty } from 'antd';\nimport { HeartOutlined, HeartFilled, LoadingOutlined } from '@ant-design/icons';\nimport { v4 as uuidV4 } from 'uuid';\n\nimport { RootState } from '../../store';\nimport { searchVideos, searchVideosStats, setQuery, setIsQueryInFavorites } from '../../store/youtubeSearchSlice';\nimport { setFavorites } from '../../store/favoritesSlice';\nimport { setCurrentRoute } from '../../store/routeSlice';\n\nimport { IFavoritesInput } from '../../api/types';\n\nimport { SearchResults, FavoritesForm } from '../../components/index';\n\nimport styles from './SearchScreen.module.css';\n\ninterface SearchScreenProps {}\n\nconst isInFavorites = (searchQuery: string, favorites: IFavoritesInput[] ): boolean => {\n  return favorites.filter(el => el.query.trim() === searchQuery.trim()).length ? true : false;\n};\n\nconst openNotificationWithIcon = (type: 'success' | 'info' | 'warning' | 'error',\n  message: string,\n  description: string,\n  placement: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight') => {\n  notification[type]({\n    message,\n    description,\n    placement,\n  });\n};\n\nconst SearchScreen: FC<SearchScreenProps> = () => {\n  const reduxDispatch = useDispatch();\n  const search = useSelector((state: RootState) => state.youtubeSearch);\n  const { favorites } = useSelector((state: RootState) => state.favorites);\n  const routeHistory = useHistory();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect (() => {\n    const checkIsQueryInFavorite = isInFavorites(search.query, favorites);\n\n    if (checkIsQueryInFavorite === search.isQueryInFavorites) return;\n    reduxDispatch(setIsQueryInFavorites({ value: checkIsQueryInFavorite }));\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect (() => {\n    if (!search.errorMessage) return;\n    openNotificationWithIcon('error', 'Ошибка загрузки данных', search.errorMessage, 'topRight');\n  }, [search.errorMessage]);\n\n  useEffect (() => {\n    setSearchQuery(search.query);\n  }, [search.query]);\n\n  useEffect (() => {\n    if (search.queryStatus !== 'fulfilled') return;\n    reduxDispatch(searchVideosStats(search.videoIdList));\n  }, [reduxDispatch, search.queryStatus, search.videoIdList]);\n\n  const makeSearch = () => {\n    if (!searchQuery) {\n      openNotificationWithIcon('warning', 'Поиск не может быть осуществлен.', 'Введите, пожалуйста, поисковый запрос.', 'topRight');\n      return;\n    }\n\n    reduxDispatch(setQuery({ query: searchQuery.trim() }));\n    reduxDispatch(searchVideos({ q: searchQuery.trim() }));\n\n    const checkIsQueryInFavorite = isInFavorites(searchQuery, favorites);\n    if (checkIsQueryInFavorite !== search.isQueryInFavorites) reduxDispatch(setIsQueryInFavorites({ value: checkIsQueryInFavorite }));\n  };\n\n  const saveToFavorites = (values: IFavoritesInput) => {\n    reduxDispatch(setFavorites({ ...values, id: uuidV4() }));\n    setIsModalVisible(false);\n    reduxDispatch(setIsQueryInFavorites({ value: true }));\n  };\n\n  return (\n    <>\n      <Row\n        justify=\"center\"\n        align=\"middle\"\n        style={{ minHeight: '80vh' }}\n      >\n        <Col\n          xs={{ span: 23 }}\n          sm={{ span: 22 }}\n          md={{ span: 22 }}\n          lg={{ span: 20 }}\n          xxl={{ span: 16 }}\n        >\n          {\n            search.queryStatus !== 'fulfilled' && !search.videos.length ?\n              <h1 className={styles.searchTitle}>Поиск видео</h1> :\n              <h2 className={styles.searchResultTitle}>Поиск видео</h2>\n          }\n          <Form\n            layout=\"vertical\"\n            className={styles.form}\n            onFinish={makeSearch}\n          >\n            <Form.Item\n              style={{\n                flex: 1,\n                maxWidth: search.queryStatus !== 'fulfilled' && !search.videos.length ? 535 : 'unset',\n                marginBottom: 0,\n              }}\n            >\n              <div className={styles.inputWrapper}>\n                <Tooltip\n                  className={styles.toolTipWrapper}\n                  placement='bottom'\n                  color='#ffffff'\n                  title={\n                    <>\n                      <Typography.Text\n                        strong\n                        style={{\n                          display: 'block',\n                          marginBottom: 15,\n                        }}\n                      >\n                        Поиск сохранён в разделе «Избранное»\n                      </Typography.Text>\n                      <NavLink\n                        style={{ marginTop: 15 }}\n                        to={'/favorites'}\n                        onClick={() => reduxDispatch(setCurrentRoute('/favorites'))}\n                      >\n                        Перейти в «Избранное»\n                      </NavLink>\n                    </>\n                  }\n                  zIndex={search.isQueryInFavorites? 1 : -1}\n                >\n                  {search.isQueryInFavorites ?\n                    <HeartFilled\n                      className={styles.icon}\n                      style={{\n                        color: '#1890FF',\n                        visibility: search.videos.length ? 'visible' : 'hidden',\n                      }}\n                      onClick={() => {\n                        routeHistory.push('/favorites');\n                        reduxDispatch(setCurrentRoute('/favorites'));\n                      }}\n                    /> :\n                    <HeartOutlined\n                      className={styles.icon}\n                      style={{\n                        color: '#1890FF',\n                        visibility: search.videos.length ? 'visible' : 'hidden',\n                      }}\n                      onClick={() => setIsModalVisible(true)}\n                    />\n                  }\n                </Tooltip>\n                <Input\n                  className={styles.input}\n                  style={{\n                    fontFamily: 'Roboto, sans-serif',\n                    fontSize: 20,\n                    lineHeight: 0,\n                    width: '100%',\n                    borderRadius: '5px 0px 0px 5px',\n                    padding: '12px 35px 12px 15px',\n                  }}\n                  placeholder=\"Что хотите посмотреть?\"\n                  defaultValue={search.query}\n                  value={searchQuery}\n                  onChange={(e) => {\n                    setSearchQuery(e.target.value);\n                    const checkIsQueryInFavorite = isInFavorites(e.target.value, favorites);\n                    if (checkIsQueryInFavorite !== search.isQueryInFavorites) reduxDispatch(setIsQueryInFavorites({ value: checkIsQueryInFavorite }));\n                  }}\n                />\n              </div>\n            </Form.Item>\n            <Form.Item style={{ marginBottom: 0 }}>\n              <Button\n                className={styles.searchBtn}\n                type='primary'\n                htmlType=\"submit\"\n                style={{\n                  fontFamily: 'Roboto, sans-serif',\n                  fontSize: 20,\n                  lineHeight: '100%',\n                  height: 50,\n                  borderRadius: '0px 5px 5px 0px',\n                }}\n              >\n                <Spin\n                  spinning={search.isLoading}\n                  indicator={\n                    <LoadingOutlined\n                      style={{\n                        position: 'absolute',\n                        fontSize: 24,\n                        color: '#ffffff',\n                        top: '25%',\n                        left: '7%',\n                      }}\n                    />\n                  }\n                />\n                Найти\n              </Button>\n            </Form.Item>\n          </Form>\n\n          {(search.queryStatus === 'fulfilled' || search.queryStatus === 'rejected') && !search.videos.length ?\n            <Row\n              justify=\"center\"\n              style={{ marginTop: 30 }}\n            >\n              <Col flex='auto'>\n                <Empty description={search.queryStatus === 'fulfilled' ? 'По Вашему запросу видео не найдены.' : 'Ошибка загрузки данных.'}/>\n              </Col>\n            </Row> :\n            <SearchResults />\n          }\n        </Col>\n      </Row>\n\n      <Modal\n        title={null}\n        visible={isModalVisible}\n        closable={false}\n        footer={null}\n        onCancel={() => setIsModalVisible(false)}\n      >\n        <h3\n          style={{\n            fontFamily: 'Roboto, sans-serif',\n            textAlign: 'center', fontSize: 18,\n            margin: 0,\n            padding: '15px 0 35px',\n          }}\n        >\n          Сохранить запрос\n        </h3>\n        <FavoritesForm\n          initialValues={{\n            id: '',\n            title: '',\n            query: searchQuery.trim(),\n            order: 'relevance',\n            resultsPerPage: 1,\n          }}\n          onSubmit={saveToFavorites}\n          onCancel={() => setIsModalVisible(false)}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default SearchScreen;\n","import { FC, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { List, Typography, Row, Col, Modal, notification, Empty, Spin } from 'antd';\nimport { ExclamationCircleOutlined, LoadingOutlined } from '@ant-design/icons';\n\nimport { RootState } from '../../store';\nimport { editFavoriteItem, deleteFavoriteItem } from '../../store/favoritesSlice';\nimport { searchVideos, setQuery, setIsQueryInFavorites } from '../../store/youtubeSearchSlice';\nimport { setCurrentRoute } from '../../store/routeSlice';\n\nimport { IFavoritesInput } from '../../api/types';\n\nimport { FavoritesForm } from '../../components/index';\n\nimport styles from './FavoritesScreen.module.css';\n\ninterface FavoritesScreenProps {}\n\nconst isInFavorites = (searchQuery: string, id: string, favorites: IFavoritesInput[] ): boolean => {\n  return favorites.filter(el => el.query === searchQuery && el.id !== id).length ? true : false;\n};\n\nconst { confirm } = Modal;\n\nconst openNotificationWithIcon = (type: 'success' | 'info' | 'warning' | 'error',\n  message: string,\n  description: string,\n  placement: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight') => {\n  notification[type]({\n    message,\n    description,\n    placement,\n  });\n};\n\nconst FavoritesScreen: FC<FavoritesScreenProps> = () => {\n  const reduxDispatch = useDispatch();\n  const routeHistory = useHistory();\n  const { isQueryInFavorites } = useSelector((state: RootState) => state.youtubeSearch);\n  const { favorites, isLoading, isError } = useSelector((state: RootState) => state.favorites);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [activeItem, setActiveItem] = useState<IFavoritesInput>({\n    id: '',\n    title: '',\n    query: '',\n    order: 'relevance',\n    resultsPerPage: 12,\n  });\n\n  const showConfirm = (title: string, id: string) => {\n    confirm({\n      title: `Удалить запрос «${title}» из «Избранного»?`,\n      icon: <ExclamationCircleOutlined />,\n      okText: 'Удалить',\n      cancelText: 'Отмена',\n      onOk() {\n        reduxDispatch(deleteFavoriteItem({ id }));\n      },\n    });\n  };\n\n  const showConfirmOpenQuery = (favoriteItem: IFavoritesInput) => {\n    const orderName = {\n      relevance: 'Без сортировки',\n      title: 'По названию',\n      date: 'По дате релиза',\n      viewCount: 'По количеству просмотров',\n      rating: 'По рейтингу',\n    };\n\n    confirm({\n      title: 'Выполнить запрос ?',\n      content:\n      <>\n        <Typography.Text style={{ display: 'block', marginBottom: 5 }}>Название: «{favoriteItem.title}»</Typography.Text>\n        <Typography.Text style={{ display: 'block', marginBottom: 5 }}>Запрос: «{favoriteItem.query}»</Typography.Text>\n        <Typography.Text style={{ display: 'block', marginBottom: 5 }}>Сортировка: «{orderName[favoriteItem.order]}»</Typography.Text>\n        <Typography.Text style={{ display: 'block' }}>Max количество видео: «{favoriteItem.resultsPerPage}»</Typography.Text>\n      </>,\n      okText: 'Выполнить',\n      cancelText: 'Отмена',\n      icon: <ExclamationCircleOutlined />,\n      onOk() {\n        makeSearch(favoriteItem.id);\n      },\n    });\n  };\n\n  const onEditFavoriteItem = (values: IFavoritesInput) => {\n    const trimQuery = values.query.trim();\n\n    if (isInFavorites(trimQuery, activeItem.id, favorites)) {\n      openNotificationWithIcon('warning', `Запрос «${values.query}» уже сохранен в «Избранном»`, 'Отредактируйте, пожалуйста, текст запроса, что бы сохранить изменения', 'topRight');\n      return;\n    }\n    reduxDispatch(editFavoriteItem({ ...values, query: trimQuery, id: activeItem.id }));\n    setIsModalVisible(false);\n  };\n\n  const makeSearch = (id: string) => {\n    const searchInput = favorites.filter(el => el.id === id)[0];\n    reduxDispatch(setQuery({ query: searchInput.query }));\n    reduxDispatch(searchVideos({\n      q: searchInput.query,\n      order: searchInput.order ? searchInput.order : 'relevance',\n      resultsPerPage: searchInput.resultsPerPage,\n      maxResults: searchInput.resultsPerPage }));\n\n    routeHistory.push('/');\n    reduxDispatch(setCurrentRoute('/'));\n    if (!isQueryInFavorites) reduxDispatch(setIsQueryInFavorites({ value: true }));\n  };\n\n  return isLoading\n    ? (\n      <Row\n        justify=\"center\"\n        style={{ paddingTop: 120 }}\n      >\n        <Spin\n          indicator={<LoadingOutlined\n            style={{ fontSize: 48 }}\n            spin />}\n        />\n      </Row>\n    )\n    : (\n      <>\n        <Row\n          justify=\"center\"\n        >\n          <Col\n            xs={{ span: 23 }}\n            sm={{ span: 22 }}\n            md={{ span: 22 }}\n            lg={{ span: 20 }}\n            xxl={{ span: 16 }}\n          >\n            <h2 className={styles.title}>Избранное</h2>\n            {!favorites.length ?\n              <Row\n                justify=\"center\"\n              >\n                <Col flex='auto'>\n                  <Empty description={isError ? 'Ошибка загрузки данных.' : 'У Вас пока нет сохраненных запросов.'}/>\n                </Col>\n              </Row> :\n              <List\n                className={styles.favoritesList}\n                dataSource={favorites}\n                renderItem={item => (\n                  <List.Item\n                    key={item.id}\n                    style={{ flexWrap: 'nowrap' }}\n                    actions={[\n                      <a\n                        className={styles.editLink}\n                        key=\"list-loadmore-edit\"\n                        onClick={() => {\n                          setActiveItem(favorites.filter(el => el.id === item.id)[0]);\n                          setIsModalVisible(true);\n                        }}\n                      >\n                        Изменить\n                      </a>,\n                      <a\n                        className={styles.deleteLink}\n                        key=\"list-loadmore-more\"\n                        onClick={() => showConfirm(item.query, item.id)}\n                      >\n                        Удалить\n                      </a>,\n                    ]}\n                  >\n                    <Typography.Paragraph\n                      className={styles.itemTitle}\n                      style={{ margin: 0 }}\n                      ellipsis={{ rows: 1, expandable: false }}\n                      onClick={() => showConfirmOpenQuery(item)}\n                    >\n                      {item.query}\n                    </Typography.Paragraph>\n                  </List.Item>\n                )}\n              />\n            }\n          </Col>\n        </Row>\n\n        <Modal\n          title={null}\n          visible={isModalVisible}\n          closable={false}\n          footer={null}\n          onCancel={() => setIsModalVisible(false)}\n        >\n          <h3\n            style={{\n              fontFamily: 'Roboto, sans-serif',\n              textAlign: 'center', fontSize: 18,\n              margin: 0,\n              padding: '15px 0 35px',\n            }}\n          >\n            Изменить запрос\n          </h3>\n          <FavoritesForm\n            initialValues={{\n              id: activeItem.id,\n              title: activeItem.title,\n              query: activeItem.query,\n              order: activeItem.order,\n              resultsPerPage: activeItem.resultsPerPage,\n            }}\n            editMode={true}\n            onSubmit={onEditFavoriteItem}\n            onCancel={() => setIsModalVisible(false)}\n          />\n        </Modal>\n      </>\n    );\n};\n\nexport default FavoritesScreen;\n","import { FC } from 'react';\nimport { Empty, Row, Col } from 'antd';\n\nconst NotFoundScreen: FC = () => {\n  return (\n    <Row\n      justify=\"center\"\n      align=\"middle\"\n      style={{ minHeight: '80vh' }}\n    >\n      <Col flex='auto'>\n        <Empty description='Упс! Запрашиваемая Вами страница не найдена.'/>\n      </Col>\n    </Row>\n  );\n};\n\nexport default NotFoundScreen;\n","import { FC } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport {\r\n  FavoritesScreen,\r\n  LoginScreen,\r\n  SearchScreen,\r\n  NotFoundScreen,\r\n} from '../screens';\r\nimport { useRouteGuard } from './useRouteGuard';\r\n\r\nexport const RouterView: FC = () => {\r\n  useRouteGuard();\r\n\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        component={SearchScreen}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/login\"\r\n        component={LoginScreen}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/favorites\"\r\n        component={FavoritesScreen}\r\n      />\r\n      <Route\r\n        path=\"*\"\r\n        component={NotFoundScreen}\r\n      />\r\n    </Switch>\r\n  );\r\n};\r\n","import { useLocation, useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { RootState } from '../store';\n\nexport const useRouteGuard = () => {\n  const { pathname } = useLocation();\n  const routeHistory = useHistory();\n  const { userId } = useSelector((state: RootState) => state.user);\n\n  if (!userId && pathname !== '/login') {\n    routeHistory.push('/login');\n  }\n\n  return null;\n};\n","import { FC, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Layout, Row, Col } from 'antd';\n\nimport { RootState } from './store';\nimport { getFavoritesFromDbThunk, saveFavoritesToDbThunk } from './store/favoritesSlice';\n\nimport { RouterView } from './router';\nimport { Header } from './components';\n\ninterface AppProps {}\n\nconst App: FC<AppProps> = () => {\n  const reduxDispatch = useDispatch();\n  const { userId } = useSelector((state: RootState) => state.user);\n  const { favorites, updateDb } = useSelector((state: RootState) => state.favorites);\n\n  useEffect(() => {\n    if (!userId) return;\n    reduxDispatch(getFavoritesFromDbThunk(userId));\n  }, [userId, reduxDispatch]);\n\n  useEffect(() => {\n    if (!updateDb) return;\n    reduxDispatch(saveFavoritesToDbThunk({ favorites, userId }));\n  }, [updateDb, favorites, userId, reduxDispatch]);\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      {userId && (\n        <Layout.Header style={{ background: '#ffffff', padding: 0 }}>\n          <Row justify=\"center\">\n            <Col\n              xs={{ span: 23 }}\n              sm={{ span: 22 }}\n              md={{ span: 22 }}\n              lg={{ span: 20 }}\n              xxl={{ span: 16 }}\n            >\n              <Header />\n            </Col>\n          </Row>\n        </Layout.Header>\n      )}\n\n      <Layout.Content>\n        <RouterView />\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport youtubeSearch from './youtubeSearchSlice';\nimport user from './userSlice';\nimport favorites from './favoritesSlice';\nimport route from './routeSlice';\n\nexport const store = configureStore({\n  reducer: {\n    youtubeSearch,\n    user,\n    favorites,\n    route,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n","import ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport { store } from './store';\n\nimport './index.css';\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <BrowserRouter basename='/serj-l.github.io/YouTube-search-app'/* {process.env.PUBLIC_URL} */>\n      <App />\n    </BrowserRouter>\n  </ReduxProvider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInfoWrapper\":\"SearchResults_searchInfoWrapper__1uHxD\",\"videoList\":\"SearchResults_videoList__3D5R5\",\"videoListItem\":\"SearchResults_videoListItem__1-MP1\",\"queryTitle\":\"SearchResults_queryTitle__1QgO_\",\"videosCount\":\"SearchResults_videosCount__2150p\",\"viewsCount\":\"SearchResults_viewsCount__1B0an\",\"videoLink\":\"SearchResults_videoLink__3bR01\",\"channelLink\":\"SearchResults_channelLink__3r7zM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LoginForm_wrapper__3Nwc8\",\"title\":\"LoginForm_title__3ZQ_I\",\"form\":\"LoginForm_form__m7jhh\",\"label\":\"LoginForm_label__3w4Np\",\"input\":\"LoginForm_input__h9oQA\",\"passwInput\":\"LoginForm_passwInput__1cBSq\",\"inputWrapper\":\"LoginForm_inputWrapper__2ahvN\",\"icon\":\"LoginForm_icon__22dgL\",\"btnWrapper\":\"LoginForm_btnWrapper__E3vYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchTitle\":\"SearchScreen_searchTitle__kiJIs\",\"searchResultTitle\":\"SearchScreen_searchResultTitle__3XPvV\",\"form\":\"SearchScreen_form__1wSrV\",\"input\":\"SearchScreen_input__1oZ0B\",\"inputWrapper\":\"SearchScreen_inputWrapper__1EReX\",\"icon\":\"SearchScreen_icon__2Qdgz\",\"toolTipWrapper\":\"SearchScreen_toolTipWrapper__yI53N\",\"loaderIndicator\":\"SearchScreen_loaderIndicator__2CX4L\",\"searchBtn\":\"SearchScreen_searchBtn__2TLwU\"};"],"sourceRoot":""}