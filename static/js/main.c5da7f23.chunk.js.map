{"version":3,"sources":["components/Header/Header.module.css","store/favoritesSlice.ts","api/youtube.ts","store/youtubeSearchSlice.ts","store/routeSlice.ts","store/userSlice.ts","components/Logo.tsx","components/Header/Header.tsx","components/LoginForm/LoginForm.tsx","components/SearchResults/SearchResults.tsx","components/FavoritesForm/FavoritesForm.tsx","screens/FavoritesScreen/FavoritesScreen.tsx","screens/LoginScreen/LoginScreen.tsx","api/login.ts","screens/NotFoundScreen/NotFoundScreen.tsx","screens/SearchScreen/SearchScreen.tsx","router/index.tsx","router/useRouteGuard.ts","App.tsx","store/index.ts","index.tsx","components/SearchResults/SearchResults.module.css","components/LoginForm/LoginForm.module.css","screens/SearchScreen/SearchScreen.module.css","components/FavoritesForm/FavoritesForm.module.css","screens/FavoritesScreen/FavoritesScreen.module.css"],"names":["module","exports","favoritesSlice","createSlice","name","initialState","favorites","reducers","setFavorites","state","action","payload","favorite","query","title","id","order","resultsPerPage","push","localStorage","setItem","userId","JSON","stringify","setSavedFavorites","deleteFavoriteItem","filter","item","editFavoriteItem","map","actions","instance","axios","create","baseURL","params","part","key","process","q","maxResults","getVideos","a","get","data","getVideosStats","videoId","searchVideos","createAsyncThunk","rejectWithValue","response","message","searchVideosStats","youtubeSearchSlice","videos","totalCount","isLoading","queryStatus","errorMessage","videoIdList","statsQueryStatus","isQueryInFavorites","setQuery","setIsQueryInFavorites","value","logOut","extraReducers","builder","addCase","pending","fulfilled","pageInfo","totalResults","items","v","snippet","channelTitle","description","channelId","thumbnail","width","thumbnails","medium","height","url","forEach","video","idx","arr","length","rejected","viewCount","el","statistics","console","log","routeSlice","currentRoute","setCurrentRoute","getItem","isLoggedIn","userSlice","setUserId","setIsLoggedIn","LogoIcon","viewBox","fill","xmlns","fillRule","clipRule","d","Header","reduxDispatch","useDispatch","useSelector","route","pathname","useLocation","useEffect","align","wrap","flex","className","styles","logoWrapper","mode","selectedKeys","style","borderColor","Item","to","navlink","onClick","removeItem","stylesForInput","fontFamily","fontSize","lineHeight","borderRadius","padding","stylesForBtn","LoginForm","onSubmit","initialValues","useState","passwordInputType","setPasswordInputType","passwordInputRef","useRef","wrapper","form","layout","onFinish","label","rules","required","input","inputWrapper","EyeInvisibleOutlined","icon","current","focus","EyeOutlined","passwInput","type","ref","btnWrapper","htmlType","numFormatter","Intl","NumberFormat","SearchResults","search","youtubeSearch","videoList","viewType","setViewType","searchInfoWrapper","Text","queryTitle","strong","videosCount","color","format","disabled","UnorderedListOutlined","AppstoreOutlined","itemLayout","dataSource","renderItem","Meta","avatar","Link","href","target","preview","fallback","src","alt","Paragraph","ellipsis","rows","expandable","marginBottom","videoLink","viewsCount","channelLink","Number","Math","round","videoListItem","bodyStyle","backgroundColor","border","cover","FavoritesForm","onCancel","editMode","sliderInputValue","setSliderInputValue","Form","useForm","buttonTexts","useMemo","cancelBtn","okBtn","resetFields","placeholder","size","suffixIcon","CaretDownOutlined","Option","marginRight","min","max","onChange","ghost","confirm","Modal","FavoritesScreen","routeHistory","useHistory","user","isModalVisible","setIsModalVisible","activeItem","setActiveItem","makeSearch","searchInput","justify","xs","span","sm","md","lg","xxl","favoritesList","flexWrap","editLink","deleteLink","ExclamationCircleOutlined","okText","cancelText","onOk","showConfirm","itemTitle","margin","favoriteItem","content","display","relevance","date","rating","visible","closable","footer","textAlign","values","searchQuery","isInFavorites","placement","notification","LoginScreen","maxWidth","username","password","users","find","u","login","error","NotFoundScreen","minHeight","SearchScreen","setSearchQuery","searchResultTitle","searchTitle","toolTipWrapper","marginTop","zIndex","HeartFilled","visibility","HeartOutlined","defaultValue","e","searchBtn","spinning","indicator","LoadingOutlined","position","top","left","uuidV4","RouterView","useRouteGuard","exact","path","component","App","dataFromLocalStorage","parse","background","Content","store","configureStore","reducer","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.c5da7f23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoWrapper\":\"Header_logoWrapper__20zeq\",\"navlink\":\"Header_navlink__RNhPn\",\"menuItem\":\"Header_menuItem__3F_MM\"};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { IFavoritesInput } from '../api/types';\n\ninterface IFavoritesSlice {\n  favorites: IFavoritesInput[];\n}\n\ninterface IFavoritesPayload extends IFavoritesInput {\n  userId: string;\n}\n\nconst initialState = {\n  favorites: [],\n} as IFavoritesSlice;\n\nconst favoritesSlice = createSlice({\n  name: 'favorites',\n  initialState,\n  reducers: {\n    setFavorites(state, action: PayloadAction<IFavoritesPayload>) {\n      const { query, title, id, order, resultsPerPage } = action.payload;\n      const favorite: IFavoritesInput = {\n        query,\n        title,\n        id,\n        order,\n        resultsPerPage,\n      };\n\n      state.favorites.push(favorite);\n      localStorage.setItem(action.payload.userId, JSON.stringify(state.favorites));\n    },\n    setSavedFavorites(state, action: PayloadAction<IFavoritesInput[]>) {\n      state.favorites = action.payload;\n    },\n    deleteFavoriteItem(state, action: PayloadAction<{ id: string, userId: string }>) {\n      state.favorites = state.favorites.filter(item => item.id !== action.payload.id);\n      localStorage.setItem(action.payload.userId, JSON.stringify(state.favorites));\n    },\n    editFavoriteItem(state, action: PayloadAction<IFavoritesPayload>) {\n      const { query, title, id, order, resultsPerPage } = action.payload;\n      const favorite: IFavoritesInput = {\n        query,\n        title,\n        id,\n        order,\n        resultsPerPage,\n      };\n\n      state.favorites = state.favorites.map(item => {\n        return item.id === favorite.id ? favorite : item;\n      });\n\n      localStorage.setItem(action.payload.userId, JSON.stringify(state.favorites));\n    },\n  },\n});\n\nexport const { setFavorites, setSavedFavorites, deleteFavoriteItem, editFavoriteItem } = favoritesSlice.actions;\nexport default favoritesSlice.reducer;\n","import axios from 'axios';\n\nimport { ISearchVideoInput, ISearchVideoResponse, ISearchVideoStatsResponse } from './types';\n\nconst instance = axios.create({\n  baseURL: 'https://www.googleapis.com/youtube/v3/',\n  params: {\n    part: 'snippet',\n    key: process.env.REACT_APP_YOUTUBE_KEY,\n    q: '',\n    order: 'relevance',\n    maxResults: 12,\n    resultsPerPage: 12,\n  },\n});\n\nexport const getVideos = async (params: ISearchVideoInput): Promise<ISearchVideoResponse> => {\n  const { data } = await instance.get('/search', {\n    params,\n  });\n\n  return data;\n};\n\nexport const getVideosStats = async (videoId: string): Promise<ISearchVideoStatsResponse> => {\n  const { data } = await axios.get(`https://www.googleapis.com/youtube/v3/videos?key=${process.env.REACT_APP_YOUTUBE_KEY}&fields=items(snippet(title,channelTitle,publishedAt),id,statistics(viewCount))&part=snippet,statistics&id=${videoId}`);\n\n  return data;\n};\n","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\n\nimport { getVideos, getVideosStats } from '../api/youtube';\nimport { ISearchVideoInput, ISearchVideoResponse, ISearchVideoStatsResponse } from '../api/types';\n\nexport const searchVideos = createAsyncThunk(\n  'youtubeSearch/searchVideos',\n  async (params: ISearchVideoInput, { rejectWithValue }) => {\n    try {\n      const response = await getVideos(params);\n\n      return response;\n    } catch(err) {\n      return rejectWithValue(err.message);\n    }\n  },\n);\n\nexport const searchVideosStats = createAsyncThunk(\n  'youtubeSearch/getVideosStats',\n  async (videoId: string, { rejectWithValue }) => {\n    try {\n      const response = await getVideosStats(videoId);\n\n      return response;\n    } catch(err) {\n      return rejectWithValue(err.message);\n    }\n  },\n);\ninterface IVideoItem {\n  videoId: string;\n  title: string;\n  description: string;\n  channelTitle: string;\n  channelId: string;\n  thumbnail: {\n    width: number;\n    height: number;\n    url: string;\n  }\n\n  viewCount?: string;\n}\ninterface IYoutubeSearchState {\n  videos: IVideoItem[];\n  totalCount: number;\n  isLoading: boolean;\n  query: string;\n  queryStatus: string;\n  errorMessage: string;\n  videoIdList: string;\n  statsQueryStatus: string;\n  isQueryInFavorites: boolean;\n}\n\nconst initialState = {\n  videos: [],\n  totalCount: 0,\n  isLoading: false,\n  query: '',\n  queryStatus: '',\n  errorMessage: '',\n  videoIdList: '',\n  statsQueryStatus: '',\n  isQueryInFavorites: false,\n} as IYoutubeSearchState;\n\nconst youtubeSearchSlice = createSlice({\n  name: 'youtubeSearch',\n  initialState,\n  reducers: {\n    setQuery(state, action: PayloadAction<{ query: string }>) {\n      state.query = action.payload.query;\n    },\n    setIsQueryInFavorites(state, action: PayloadAction<{ value: boolean }>) {\n      state.isQueryInFavorites = action.payload.value;\n    },\n    logOut(state) {\n      state.videos = [];\n      state.totalCount = 0;\n      state.isLoading = false;\n      state.query = '';\n      state.queryStatus = '';\n      state.errorMessage = '';\n      state.videoIdList = '';\n      state.statsQueryStatus = '';\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(searchVideos.pending, (state) => {\n      state.isLoading = true;\n      state.queryStatus = 'pending';\n      state.errorMessage = '';\n    });\n    builder.addCase(searchVideos.fulfilled, (state, action) => {\n      const payload = action.payload as ISearchVideoResponse;\n\n      state.totalCount = payload.pageInfo.totalResults;\n      state.videos = payload.items.map((v) => ({\n        videoId: v.id.videoId,\n        title: v.snippet.channelTitle,\n        description: v.snippet.description,\n        channelTitle: v.snippet.channelTitle,\n        channelId: v.snippet.channelId,\n        thumbnail: {\n          width: v.snippet.thumbnails.medium.width,\n          height: v.snippet.thumbnails.medium.height,\n          url: v.snippet.thumbnails.medium.url,\n        },\n      }));\n      state.videoIdList = '';\n      state.videos.forEach((video, idx, arr) => {\n        idx < arr.length - 1 ? state.videoIdList += (video.videoId + ',') : state.videoIdList += video.videoId;\n      });\n\n      state.isLoading = false;\n      state.queryStatus = 'fulfilled';\n      state.errorMessage = '';\n    });\n    builder.addCase(searchVideos.rejected, (state, action) => {\n      state.isLoading = false;\n      state.queryStatus = 'rejected';\n      state.errorMessage = `${action.payload}`;\n    });\n    builder.addCase(searchVideosStats.pending, (state) => {\n      state.statsQueryStatus = 'pending';\n    });\n    builder.addCase(searchVideosStats.fulfilled, (state, action) => {\n      const payload = action.payload as ISearchVideoStatsResponse;\n      state.videos.map(video => {\n        video.viewCount = payload.items.filter(el => el.id === video.videoId)[0]?.statistics.viewCount;\n        return video;\n      });\n      state.statsQueryStatus = 'fulfilled';\n    });\n    builder.addCase(searchVideosStats.rejected, (state, action) => {\n      state.statsQueryStatus = 'rejected';\n      console.log('view counts recive error', action.payload);\n    });\n  },\n});\n\nexport const { setQuery, logOut, setIsQueryInFavorites } = youtubeSearchSlice.actions;\nexport default youtubeSearchSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IRouteState {\n  currentRoute: string;\n}\n\nconst initialState = {\n  currentRoute: '',\n} as IRouteState;\n\nconst routeSlice = createSlice({\n  name: 'route',\n  initialState,\n  reducers: {\n    setCurrentRoute(state, action: PayloadAction<string>) {\n      state.currentRoute = action.payload;\n    },\n  },\n});\n\nexport const { setCurrentRoute } = routeSlice.actions;\nexport default routeSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IUserState {\n  username: string;\n  isLoggedIn: boolean;\n  userId: string;\n}\n\nconst initialState = {\n  userId: localStorage.getItem('authToken') || '',\n  isLoggedIn: !!localStorage.getItem('authToken'),\n} as IUserState;\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUserId(state, action: PayloadAction<string>) {\n      state.userId = action.payload;\n    },\n    setIsLoggedIn(state, action: PayloadAction<boolean>) {\n      state.isLoggedIn = action.payload;\n    },\n  },\n});\n\nexport const { setUserId, setIsLoggedIn } = userSlice.actions;\nexport default userSlice.reducer;\n","import { FC } from 'react';\n\ninterface LogoIconProps {\n  width?: number;\n  height?: number;\n}\n\nexport const LogoIcon: FC<LogoIconProps> = ({\n  width = 88,\n  height = 88,\n}) => {\n  return (<svg\n    width={width}\n    height={height}\n    viewBox=\"0 0 88 88\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M59.1488 43.5667L24.683 60.9559V79.399L59.1488 62.0098V43.5667Z\"\n      fill=\"#1390E5\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M24.683 26.1787L59.1487 43.5679V62.0111L24.683 44.6218V26.1787Z\"\n      fill=\"#1180CB\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M59.1488 8.79071L24.683 26.1799V44.623L59.1488 27.2338V8.79071Z\"\n      fill=\"#35A2EC\"\n    />\n  </svg>);\n};\n","import { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { Menu, Row, Col } from 'antd';\n\nimport { RootState } from '../../store';\nimport { setIsLoggedIn, setUserId } from '../../store/userSlice';\nimport { logOut } from '../../store/youtubeSearchSlice';\nimport { setCurrentRoute } from '../../store/routeSlice';\n\nimport { LogoIcon } from '../Logo';\n\nimport styles from './Header.module.css';\n\ninterface HeaderProps {}\n\nconst Header: FC<HeaderProps> = () => {\n  const reduxDispatch = useDispatch();\n  const { currentRoute } = useSelector((state: RootState) => state.route);\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    reduxDispatch(setCurrentRoute(pathname));\n  });\n\n  return (\n    <Row\n      align=\"middle\"\n      wrap={false}\n    >\n      <Col flex='none'>\n        <div className={styles.logoWrapper}>\n          <LogoIcon\n            width={44}\n            height={44}\n          />\n        </div>\n      </Col>\n      <Col flex='auto'>\n        <Menu\n          mode='horizontal'\n          selectedKeys={[currentRoute]}\n          style={{ borderColor: 'transparent' }}\n        >\n          <Menu.Item key='/'>\n            <NavLink\n              to={'/'}\n              className={styles.navlink}\n              onClick={() => reduxDispatch(setCurrentRoute('/'))}\n            >\n                Поиск\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key='/favorites'>\n            <NavLink\n              to={'/favorites'}\n              className={styles.navlink}\n              onClick={() => reduxDispatch(setCurrentRoute('/favorites'))}\n            >\n                Избранное\n            </NavLink>\n          </Menu.Item>\n        </Menu>\n      </Col>\n      <Col flex='none'>\n        <Menu\n          mode='horizontal'\n          style={{ borderColor: 'transparent' }}\n        >\n          <Menu.Item key='logout'>\n            <NavLink\n              className={styles.navlink}\n              to={'/login'}\n              onClick={() => {\n                localStorage.removeItem('authToken');\n                reduxDispatch(setIsLoggedIn(false));\n                reduxDispatch(setUserId(''));\n                reduxDispatch(logOut());\n              }}>\n                  Выйти\n            </NavLink>\n          </Menu.Item>\n        </Menu>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Header;\n","import { FC, useState, useRef } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\n\nimport { IUserLoginInput } from '../../api/types';\n\nimport { LogoIcon } from '../Logo';\n\nimport styles from './LoginForm.module.css';\n\ninterface LoginFormProps {\n  onSubmit: (values: IUserLoginInput) => void;\n  initialValues: IUserLoginInput;\n}\n\nconst stylesForInput = {\n  fontFamily: 'Roboto, sans-serif',\n  fontSize: 20,\n  lineHeight: 0,\n  borderRadius: 5,\n  padding: '12px 15px',\n};\n\nconst stylesForBtn = {\n  fontFamily: 'Roboto, sans-serif',\n  fontSize: 20,\n  lineHeight: '100%',\n  width: 170,\n  height: 50,\n  borderRadius: 5,\n};\n\nconst LoginForm: FC<LoginFormProps> = ({\n  onSubmit,\n  initialValues,\n}) => {\n  const [passwordInputType, setPasswordInputType] = useState('password');\n  const passwordInputRef = useRef<Input>(null);\n\n  return (\n    <div className={styles.wrapper}>\n      <LogoIcon />\n      <h3 className={styles.title}>Вход</h3>\n      <Form\n        className={styles.form}\n        name=\"basic\"\n        initialValues={initialValues}\n        layout=\"vertical\"\n        onFinish={onSubmit}\n      >\n        <span className={styles.label}>Логин</span>\n        <Form.Item\n          name=\"username\"\n          rules={[{ required: true, message: 'Введите логин' }]}\n        >\n          <Input\n            className={styles.input}\n            style={stylesForInput}\n          />\n        </Form.Item>\n\n        <span className={styles.label}>Пароль</span>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: 'Введите пароль' }]}\n        >\n          <div className={styles.inputWrapper}>\n            {\n              passwordInputType === 'password' ?\n                <EyeInvisibleOutlined\n                  className={styles.icon}\n                  onClick={() => {\n                    setPasswordInputType('text');\n                    passwordInputRef.current?.focus();\n                  }}\n                /> :\n                <EyeOutlined\n                  className={styles.icon}\n                  onClick={() =>{\n                    setPasswordInputType('password');\n                    passwordInputRef.current?.focus();\n                  }}\n                />\n            }\n            <Input\n              className={styles.passwInput}\n              style={stylesForInput}\n              type={passwordInputType}\n              ref={passwordInputRef}\n            />\n          </div>\n        </Form.Item>\n\n        <Form.Item >\n          <div className={styles.btnWrapper}>\n            <Button\n              style={stylesForBtn}\n              type=\"primary\"\n              htmlType=\"submit\"\n            >\n              Войти\n            </Button>\n          </div>\n        </Form.Item>\n\n      </Form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import { FC, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { List, Image, Typography,Row, Col, Space, Button, Card } from 'antd';\nimport { UnorderedListOutlined, AppstoreOutlined } from '@ant-design/icons';\n\nimport { RootState } from '../../store';\n\nimport styles from './SearchResults.module.css';\n\ninterface SearchResultsProps {}\n\nconst numFormatter = new Intl.NumberFormat('ru');\n\nconst SearchResults: FC<SearchResultsProps> = () => {\n  const search = useSelector((state: RootState) => state.youtubeSearch);\n  const videoList = useSelector((state: RootState) => state.youtubeSearch.videos);\n  const [viewType, setViewType] = useState('list');\n\n  if (search.queryStatus !== 'fulfilled' && search.statsQueryStatus !== 'fulfilled') return null;\n  return (\n    <div className={styles.wrapper}>\n      <Row className={styles.searchInfoWrapper}>\n        <Col flex='auto'>\n          <Typography.Text className={styles.queryTitle}>Видео по запросу</Typography.Text>\n          <Typography.Text\n            className={styles.queryTitle}\n            strong\n          >\n            {`«${search.query}»`}\n          </Typography.Text>\n          <Typography.Text\n            className={styles.videosCount}\n            style={{ color: 'rgba(23, 23, 25, 0.3)' }}\n          >\n            {numFormatter.format(search.totalCount)}\n          </Typography.Text>\n        </Col>\n        <Col flex='60px'>\n          <Space>\n            <Button\n              type='text'\n              style={{\n                padding: 5,\n                color: viewType === 'list' ? '#000000' : 'rgba(23, 23, 25, 0.3)',\n              }}\n              disabled={viewType === 'list'}\n              onClick = {() => setViewType('list')}\n            >\n              <UnorderedListOutlined style={{ fontSize: 20 }} />\n            </Button>\n            <Button\n              type='text'\n              style={{\n                padding: 5,\n                color: viewType === 'cards' ? '#000000' : 'rgba(23, 23, 25, 0.3)',\n              }}\n              disabled={viewType === 'cards'}\n              onClick = {() => setViewType('cards')}\n            >\n              <AppstoreOutlined style={{ fontSize: 20 }} />\n            </Button>\n          </Space>\n        </Col>\n      </Row>\n      {viewType === 'list' ?\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={videoList}\n          renderItem={item => (\n            <List.Item key={item.videoId}>\n              <List.Item.Meta\n                avatar={\n                  <Typography.Link\n                    href={`https://www.youtube.com/watch?v=${item.videoId}`}\n                    target='_blank'\n                  >\n                    <Image\n                      preview={false}\n                      width={157}\n                      height={88}\n                      fallback='../../img/NoPreview.svg'\n                      src={item.thumbnail.url}\n                      alt='Video preview'\n                    />\n                  </Typography.Link>\n                }\n                title={\n                  <Typography.Paragraph\n                    ellipsis={{ rows: 2, expandable: false }}\n                    style={{ marginBottom: 8 }}\n                  >\n                    <Typography.Link\n                      className={styles.videoLink}\n                      href={`https://www.youtube.com/watch?v=${item.videoId}`}\n                      target='_blank'\n                    >\n                      {item.title} | {item.description}\n                    </Typography.Link>\n                  </Typography.Paragraph>\n                }\n                description={\n                  <Typography.Text\n                    className={styles.viewsCount}\n                    style={{ color: 'rgba(23, 23, 25, 0.3)' }}\n                  >\n                    <Typography.Link\n                      className={styles.channelLink}\n                      href={`https://www.youtube.com/channel/${item.channelId}`}\n                      target='_blank'\n                      style={{ color: 'rgba(23, 23, 25, 0.3)' }}\n                    >\n                      {item.channelTitle}\n                    </Typography.Link>\n                    <br />\n                    {!item.viewCount ? 'Нет данных о количестве просмотров' :\n                      Number(item.viewCount) / 1000 >= 1 ?\n                        `${numFormatter.format(Math.round(Number(item.viewCount) / 1000))} тыс. просмотров` :\n                        `${item.viewCount} просмотров`}\n                  </Typography.Text> }\n              />\n            </List.Item>\n          )}\n        /> :\n        <ul className={styles.videoList}>\n          {videoList.map(video => {\n            return (\n              <li\n                key = {video.videoId}\n                className={styles.videoListItem}\n              >\n                <Card\n                  bodyStyle={{\n                    padding: 0,\n                  }}\n                  style={{\n                    width: 245,\n                    backgroundColor: 'transparent',\n                    border: 'none',\n                  }}\n                  cover={\n                    <Typography.Link\n                      href={`https://www.youtube.com/watch?v=${video.videoId}`}\n                      target='_blank'\n                    >\n                      <Image\n                        preview={false}\n                        width={245}\n                        height={138}\n                        fallback='../../img/NoPreview.svg'\n                        src={video.thumbnail.url}\n                        alt='Video preview'\n                      />\n                    </Typography.Link>\n                  }\n                >\n                  <Card.Meta\n                    description={\n                      <>\n                        <Typography.Paragraph\n                          ellipsis={{ rows: 2, expandable: false }}\n                          style={{ marginBottom: 8 }}\n                        >\n                          <Typography.Link\n                            className={styles.videoLink}\n                            href={`https://www.youtube.com/watch?v=${video.videoId}`}\n                            target='_blank'\n                          >\n                            {video.title} | {video.description}\n                          </Typography.Link>\n                        </Typography.Paragraph>\n                        <Typography.Text\n                          className={styles.viewsCount}\n                          style={{ color: 'rgba(23, 23, 25, 0.3)' }}\n                        >\n                          <Typography.Link\n                            className={styles.channelLink}\n                            href={`https://www.youtube.com/channel/${video.channelId}`}\n                            target='_blank'\n                            style={{ color: 'rgba(23, 23, 25, 0.3)' }}\n                          >\n                            {video.channelTitle}\n                          </Typography.Link>\n                          <br />\n                          {Number(video.viewCount) / 1000 >= 1 ?\n                            `${numFormatter.format(Math.round(Number(video.viewCount) / 1000))} тыс. просмотров` :\n                            `${video.viewCount} просмотров`}\n                        </Typography.Text>\n                      </>\n                    }\n                  />\n                </Card>\n              </li>\n            );\n          })\n          }\n        </ul>\n      }\n    </div>\n  );\n};\n\nexport default SearchResults;\n","import { FC, useState, useEffect, useMemo } from 'react';\nimport { Form, Input, InputNumber, Select, Button, Slider, Col, Row } from 'antd';\nimport { CaretDownOutlined } from '@ant-design/icons';\n\nimport { IFavoritesInput } from '../../api/types';\n\nimport styles from './FavoritesForm.module.css';\n\ninterface FavoritesFormProps {\n  onSubmit: (values: IFavoritesInput) => void;\n  onCancel: () => void;\n  initialValues: IFavoritesInput;\n  editMode?: boolean;\n}\n\nconst stylesForInput = {\n  fontFamily: 'Roboto, sans-serif',\n  lineHeight: 0,\n  fontSize: 20,\n  borderRadius: 5,\n  padding: '12px 15px',\n};\n\nconst stylesForBtn = {\n  fontFamily: 'Roboto, sans-serif',\n  fontSize: 20,\n  lineHeight: '100%',\n  width: 210,\n  height: 50,\n  borderRadius: 5,\n};\n\nconst FavoritesForm: FC<FavoritesFormProps> = ({\n  onSubmit,\n  onCancel,\n  initialValues,\n  editMode = false,\n}) => {\n  const [sliderInputValue, setSliderInputValue] = useState(12);\n  const [form] = Form.useForm();\n  const buttonTexts = useMemo(() => {\n    return editMode ? { cancelBtn: 'Не изменять', okBtn: 'Изменить' } : { cancelBtn: 'Не сохранять', okBtn: 'Сохранить' };\n  }, [editMode]);\n\n  useEffect(() => {\n    form.resetFields();\n    setSliderInputValue(12);\n  }, [form, initialValues]);\n\n  return (\n    <Form\n      form={form}\n      name='saveToFavorites'\n      id='saveToFavorites'\n      initialValues={initialValues}\n      layout='vertical'\n      onFinish={onSubmit}\n    >\n      <span className={styles.label}>Запрос</span>\n      <Form.Item\n        name='query'\n        rules={[{ required: true, message: 'Введите запрос' }]}\n      >\n        <Input\n          style={stylesForInput}\n          type='text'\n          disabled={!editMode}\n        />\n      </Form.Item>\n\n      <span className={styles.label}><span style={{ color: 'red' }}>* </span>Название</span>\n      <Form.Item\n        name='title'\n        rules={[{ required: true, message: 'Введите название' }]}\n      >\n        <Input\n          placeholder='Укажите название'\n          style={stylesForInput}\n          type='text'\n        />\n      </Form.Item>\n\n      <span className={styles.label}>Сортировать по</span>\n      <Form.Item name='order'>\n        <Select\n          size='large'\n          style={{\n            fontFamily: 'Roboto, sans-serif',\n            fontSize: 20,\n          }}\n          suffixIcon={<CaretDownOutlined />}\n        >\n          <Select.Option value='relevance'>Без сортировки</Select.Option>\n          <Select.Option value='title'>По названию</Select.Option>\n          <Select.Option value='date'>По дате релиза</Select.Option>\n          <Select.Option value='viewCount'>По количеству просмотров</Select.Option>\n          <Select.Option value='rating'>По рейтингу</Select.Option>\n        </Select>\n      </Form.Item>\n\n      <span className={styles.label}>Максимальное количество</span>\n      <Row align='middle'>\n        <Col flex='auto'>\n          <Form.Item name='resultsPerPage'>\n            <Slider\n              style={{ marginRight: 20 }}\n              min={1}\n              max={50}\n              value={sliderInputValue}\n              onChange={(value) => setSliderInputValue(value)}\n            />\n          </Form.Item>\n        </Col>\n        <Col flex='none'>\n          <Form.Item name='resultsPerPage'>\n            <InputNumber\n              style={{\n                fontFamily: 'Roboto, sans-serif',\n                lineHeight: 0,\n                fontSize: 20,\n                borderRadius: 5,\n                padding: '5px 0px 5px 20px',\n              }}\n              min={1}\n              max={50}\n              size='large'\n              value={sliderInputValue}\n              onChange={(value) => setSliderInputValue(value)}\n            />\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Form.Item >\n        <div className={styles.btnWrapper}>\n          <Button\n            style={stylesForBtn}\n            type='primary'\n            ghost\n            onClick={onCancel}\n          >\n            {buttonTexts.cancelBtn}\n          </Button>\n          <Button\n            style={stylesForBtn}\n            type='primary'\n            htmlType='submit'\n          >\n            {buttonTexts.okBtn}\n          </Button>\n        </div>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default FavoritesForm;\n","import { FC, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { List, Typography, Row, Col, Modal, notification, Empty } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\n\nimport { RootState } from '../../store';\nimport { editFavoriteItem, deleteFavoriteItem } from '../../store/favoritesSlice';\nimport { searchVideos, setQuery, setIsQueryInFavorites } from '../../store/youtubeSearchSlice';\nimport { setCurrentRoute } from '../../store/routeSlice';\n\nimport { IFavoritesInput } from '../../api/types';\n\nimport { FavoritesForm } from '../../components/index';\n\nimport styles from './FavoritesScreen.module.css';\n\ninterface FavoritesScreenProps {}\n\nconst isInFavorites = (searchQuery: string, id: string, favorites: IFavoritesInput[] ): boolean => {\n  return favorites.filter(el => el.query === searchQuery && el.id !== id).length ? true : false;\n};\n\nconst { confirm } = Modal;\n\nconst openNotificationWithIcon = (type: 'success' | 'info' | 'warning' | 'error',\n  message: string,\n  description: string,\n  placement: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight') => {\n  notification[type]({\n    message,\n    description,\n    placement,\n  });\n};\n\nconst FavoritesScreen: FC<FavoritesScreenProps> = () => {\n  const reduxDispatch = useDispatch();\n  const routeHistory = useHistory();\n  const { favorites } = useSelector((state: RootState) => state.favorites);\n  const { userId } = useSelector((state: RootState) => state.user);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [activeItem, setActiveItem] = useState<IFavoritesInput>({\n    id: '',\n    title: '',\n    query: '',\n    order: 'relevance',\n    resultsPerPage: 12,\n  });\n\n  const showConfirm = (title: string, id: string, userId: string) => {\n    confirm({\n      title: `Удалить запрос «${title}» из «Избранного»?`,\n      icon: <ExclamationCircleOutlined />,\n      okText: 'Удалить',\n      cancelText: 'Отмена',\n      onOk() {\n        reduxDispatch(deleteFavoriteItem({ id, userId }));\n      },\n    });\n  };\n\n  const showConfirmOpenQuery = (favoriteItem: IFavoritesInput) => {\n    const orderName = {\n      relevance: 'Без сортировки',\n      title: 'По названию',\n      date: 'По дате релиза',\n      viewCount: 'По количеству просмотров',\n      rating: 'По рейтингу',\n    };\n\n    confirm({\n      title: 'Выполнить запрос ?',\n      content:\n      <>\n        <Typography.Text style={{ display: 'block', marginBottom: 5 }}>Название: «{favoriteItem.title}»</Typography.Text>\n        <Typography.Text style={{ display: 'block', marginBottom: 5 }}>Запрос: «{favoriteItem.query}»</Typography.Text>\n        <Typography.Text style={{ display: 'block', marginBottom: 5 }}>Сортировка: «{orderName[favoriteItem.order]}»</Typography.Text>\n        <Typography.Text style={{ display: 'block' }}>Max количество видео: «{favoriteItem.resultsPerPage}»</Typography.Text>\n      </>,\n      okText: 'Выполнить',\n      cancelText: 'Отмена',\n      icon: <ExclamationCircleOutlined />,\n      onOk() {\n        makeSearch(favoriteItem.id);\n      },\n    });\n  };\n\n  const onEditFavoriteItem = (values: IFavoritesInput) => {\n    if (isInFavorites(values.query, activeItem.id, favorites)) {\n      openNotificationWithIcon('warning', `Запрос «${values.query}» уже сохранен в «Избранном»`, 'Отредактируйте, пожалуйста, текст запроса, что бы сохранить изменения', 'topRight');\n      return;\n    }\n    reduxDispatch(editFavoriteItem({ ...values, userId, id: activeItem.id }));\n    setIsModalVisible(false);\n  };\n\n  const makeSearch = (id: string) => {\n    const searchInput = favorites.filter(el => el.id === id)[0];\n    reduxDispatch(setQuery({ query: searchInput.query }));\n    reduxDispatch(searchVideos({\n      q: searchInput.query,\n      order: searchInput.order ? searchInput.order : 'relevance',\n      resultsPerPage: searchInput.resultsPerPage,\n      maxResults: searchInput.resultsPerPage }));\n\n    routeHistory.push('/');\n    reduxDispatch(setCurrentRoute('/'));\n    reduxDispatch(setIsQueryInFavorites({ value: true }));\n  };\n\n  return (\n    <>\n      <Row\n        justify=\"center\"\n      >\n        <Col\n          xs={{ span: 23 }}\n          sm={{ span: 22 }}\n          md={{ span: 22 }}\n          lg={{ span: 20 }}\n          xxl={{ span: 16 }}\n        >\n          <h2 className={styles.title}>Избранное</h2>\n          {!favorites.length ?\n            <Row\n              justify=\"center\"\n            >\n              <Col flex='auto'>\n                <Empty description='У Вас пока нет сохраненных запросов.'/>\n              </Col>\n            </Row> :\n            <List\n              className={styles.favoritesList}\n              dataSource={favorites}\n              renderItem={item => (\n                <List.Item\n                  key={item.id}\n                  style={{ flexWrap: 'nowrap' }}\n                  actions={[\n                    <a\n                      className={styles.editLink}\n                      key=\"list-loadmore-edit\"\n                      onClick={() => {\n                        setActiveItem(favorites.filter(el => el.id === item.id)[0]);\n                        setIsModalVisible(true);\n                      }}\n                    >\n                      Изменить\n                    </a>,\n                    <a\n                      className={styles.deleteLink}\n                      key=\"list-loadmore-more\"\n                      onClick={() => showConfirm(item.query, item.id, userId)}\n                    >\n                      Удалить\n                    </a>,\n                  ]}\n                >\n                  <Typography.Paragraph\n                    className={styles.itemTitle}\n                    style={{ margin: 0 }}\n                    ellipsis={{ rows: 1, expandable: false }}\n                    onClick={() => showConfirmOpenQuery(item)}\n                  >\n                    {item.query}\n                  </Typography.Paragraph>\n                </List.Item>\n              )}\n            />\n          }\n        </Col>\n      </Row>\n\n      <Modal\n        title={null}\n        visible={isModalVisible}\n        closable={false}\n        footer={null}\n        onCancel={() => setIsModalVisible(false)}\n      >\n        <h3\n          style={{\n            fontFamily: 'Roboto, sans-serif',\n            textAlign: 'center', fontSize: 18,\n            margin: 0,\n            padding: '15px 0 35px',\n          }}\n        >\n          Изменить запрос\n        </h3>\n        <FavoritesForm\n          initialValues={{\n            id: activeItem.id,\n            title: activeItem.title,\n            query: activeItem.query,\n            order: activeItem.order,\n            resultsPerPage: activeItem.resultsPerPage,\n          }}\n          editMode={true}\n          onSubmit={onEditFavoriteItem}\n          onCancel={() => setIsModalVisible(false)}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default FavoritesScreen;\n","import { FC } from 'react';\nimport { message, Col, Row } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { LoginForm } from '../../components';\nimport { login } from '../../api/login';\nimport { IUserLoginInput } from '../../api/types';\nimport { setIsLoggedIn, setUserId } from '../../store/userSlice';\n\ninterface LoginScreenProps {}\n\nconst LoginScreen: FC<LoginScreenProps> = () => {\n  const routeHistory = useHistory();\n  const reduxDispatch = useDispatch();\n\n  const onSubmit = (data: IUserLoginInput) => {\n    const user = login(data);\n\n    if (!user) {\n      message.error('Ошибка авторизации');\n      localStorage.removeItem('authToken');\n      reduxDispatch(setIsLoggedIn(false));\n      reduxDispatch(setUserId(''));\n      return;\n    }\n\n    localStorage.setItem('authToken', user.userId);\n    reduxDispatch(setIsLoggedIn(true));\n    reduxDispatch(setUserId(user.userId));\n    routeHistory.push('/');\n  };\n\n  return (\n    <Row\n      justify=\"center\"\n      align=\"middle\"\n      style={{ height: '100vh' }}\n    >\n      <Col\n        xs={{ span: 23 }}\n        sm={{ span: 22 }}\n        md={{ span: 22 }}\n        lg={{ span: 20 }}\n        xxl={{ span: 16 }}\n        style={{ maxWidth: 510 }}\n      >\n        <LoginForm\n          initialValues={{ username: '', password: '' }}\n          onSubmit={onSubmit}\n        />\n      </Col>\n    </Row>\n  );\n};\n\nexport default LoginScreen;\n","import users from './users.json';\nimport { IUserLoginInput, ILoginResponse } from './types';\n\nexport function login(data: IUserLoginInput): ILoginResponse | null {\n  const user = users.find(u => u.username === data.username);\n\n  if (user && user.password === data.password) {\n    return {\n      username: user.username,\n      userId: user.userId,\n    };\n  }\n\n  return null;\n}\n","import { FC } from 'react';\nimport { Empty, Row, Col } from 'antd';\n\nconst NotFoundScreen: FC = () => {\n  return (\n    <Row\n      justify=\"center\"\n      align=\"middle\"\n      style={{ minHeight: '80vh' }}\n    >\n      <Col flex='auto'>\n        <Empty description='Упс! Запрашиваемая Вами страница не найдена.'/>\n      </Col>\n    </Row>\n  );\n};\n\nexport default NotFoundScreen;\n","import { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { Input, Form, Button, Row, Col, Modal, Tooltip, Typography, notification, Spin, Empty } from 'antd';\nimport { HeartOutlined, HeartFilled, LoadingOutlined } from '@ant-design/icons';\nimport { v4 as uuidV4 } from 'uuid';\n\nimport { RootState } from '../../store';\nimport { searchVideos, searchVideosStats, setQuery, setIsQueryInFavorites } from '../../store/youtubeSearchSlice';\nimport { setFavorites } from '../../store/favoritesSlice';\nimport { setCurrentRoute } from '../../store/routeSlice';\n\nimport { IFavoritesInput } from '../../api/types';\n\nimport { SearchResults, FavoritesForm } from '../../components/index';\n\nimport styles from './SearchScreen.module.css';\n\ninterface SearchScreenProps {}\n\nconst isInFavorites = (searchQuery: string, favorites: IFavoritesInput[] ): boolean => {\n  return favorites.filter(el => el.query === searchQuery).length ? true : false;\n};\n\nconst openNotificationWithIcon = (type: 'success' | 'info' | 'warning' | 'error',\n  message: string,\n  description: string,\n  placement: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight') => {\n  notification[type]({\n    message,\n    description,\n    placement,\n  });\n};\n\nconst SearchScreen: FC<SearchScreenProps> = () => {\n  const reduxDispatch = useDispatch();\n  const search = useSelector((state: RootState) => state.youtubeSearch);\n  const { userId } = useSelector((state: RootState) => state.user);\n  const { favorites } = useSelector((state: RootState) => state.favorites);\n  const routeHistory = useHistory();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect (() => {\n    reduxDispatch(setIsQueryInFavorites({ value: isInFavorites(search.query, favorites) }));\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  useEffect (() => {\n    if (!search.errorMessage) return;\n    openNotificationWithIcon('error', 'Ошибка загрузки данных', search.errorMessage, 'topLeft');\n  }, [search.errorMessage]);\n\n  useEffect (() => {\n    setSearchQuery(search.query);\n  }, [search.query]);\n\n  useEffect (() => {\n    if (search.queryStatus !== 'fulfilled') return;\n    reduxDispatch(searchVideosStats(search.videoIdList));\n  }, [reduxDispatch, search.queryStatus, search.videoIdList]);\n\n  const makeSearch = (q: string) => {\n    if (!q) return;\n\n    reduxDispatch(setQuery({ query: searchQuery }));\n    reduxDispatch(searchVideos({ q: searchQuery }));\n    reduxDispatch(setIsQueryInFavorites({ value: isInFavorites(searchQuery, favorites) }));\n  };\n\n  const saveToFavorites = (values: IFavoritesInput) => {\n    reduxDispatch(setFavorites({ ...values, userId, id: uuidV4() }));\n    setIsModalVisible(false);\n    reduxDispatch(setIsQueryInFavorites({ value: true }));\n  };\n\n  return (\n    <>\n      <Row\n        justify=\"center\"\n        align=\"middle\"\n        style={{ minHeight: '80vh' }}\n      >\n        <Col\n          xs={{ span: 23 }}\n          sm={{ span: 22 }}\n          md={{ span: 22 }}\n          lg={{ span: 20 }}\n          xxl={{ span: 16 }}\n        >\n          {\n            search.queryStatus !== 'fulfilled' && !search.videos.length ?\n              <h1 className={styles.searchTitle}>Поиск видео</h1> :\n              <h2 className={styles.searchResultTitle}>Поиск видео</h2>\n          }\n          <Form\n            layout=\"vertical\"\n            className={styles.form}\n            onFinish={makeSearch}\n          >\n            <Form.Item\n              style={{\n                flex: 1,\n                maxWidth: search.queryStatus !== 'fulfilled' && !search.videos.length ? 535 : 'unset',\n                marginBottom: 0,\n              }}\n            >\n              <div className={styles.inputWrapper}>\n                <Tooltip\n                  className={styles.toolTipWrapper}\n                  placement='bottom'\n                  color='#ffffff'\n                  title={\n                    <>\n                      <Typography.Text\n                        strong\n                        style={{\n                          display: 'block',\n                          marginBottom: 15,\n                        }}\n                      >\n                        Поиск сохранён в разделе «Избранное»\n                      </Typography.Text>\n                      <NavLink\n                        style={{ marginTop: 15 }}\n                        to={'/favorites'}\n                        onClick={() => reduxDispatch(setCurrentRoute('/favorites'))}\n                      >\n                        Перейти в «Избранное»\n                      </NavLink>\n                    </>\n                  }\n                  zIndex={search.isQueryInFavorites? 1 : -1}\n                >\n                  {search.isQueryInFavorites ?\n                    <HeartFilled\n                      className={styles.icon}\n                      style={{\n                        color: '#1890FF',\n                        visibility: search.videos.length ? 'visible' : 'hidden',\n                      }}\n                      onClick={() => {\n                        routeHistory.push('/favorites');\n                        reduxDispatch(setCurrentRoute('/favorites'));\n                      }}\n                    /> :\n                    <HeartOutlined\n                      className={styles.icon}\n                      style={{\n                        color: '#1890FF',\n                        visibility: search.videos.length ? 'visible' : 'hidden',\n                      }}\n                      onClick={() => setIsModalVisible(true)}\n                    />\n                  }\n                </Tooltip>\n                <Input\n                  className={styles.input}\n                  style={{\n                    fontFamily: 'Roboto, sans-serif',\n                    fontSize: 20,\n                    lineHeight: 0,\n                    width: '100%',\n                    borderRadius: '5px 0px 0px 5px',\n                    padding: '12px 35px 12px 15px',\n                  }}\n                  placeholder=\"Что хотите посмотреть?\"\n                  defaultValue={search.query}\n                  value={searchQuery}\n                  onChange={(e) => {\n                    setSearchQuery(e.target.value);\n                    reduxDispatch(setIsQueryInFavorites({ value: isInFavorites(e.target.value, favorites) }));\n                  }}\n                />\n              </div>\n            </Form.Item>\n            <Form.Item style={{ marginBottom: 0 }}>\n              <Button\n                className={styles.searchBtn}\n                type='primary'\n                htmlType=\"submit\"\n                style={{\n                  fontFamily: 'Roboto, sans-serif',\n                  fontSize: 20,\n                  lineHeight: '100%',\n                  height: 50,\n                  borderRadius: '0px 5px 5px 0px',\n                }}\n              >\n                <Spin\n                  spinning={search.isLoading}\n                  indicator={\n                    <LoadingOutlined\n                      style={{\n                        position: 'absolute',\n                        fontSize: 24,\n                        color: '#ffffff',\n                        top: '25%',\n                        left: '7%',\n                      }}\n                    />\n                  }\n                />\n                Найти\n              </Button>\n            </Form.Item>\n          </Form>\n\n          {(search.queryStatus === 'fulfilled' || search.queryStatus === 'rejected') && !search.videos.length ?\n            <Row\n              justify=\"center\"\n              style={{ marginTop: 30 }}\n            >\n              <Col flex='auto'>\n                <Empty description={search.queryStatus === 'fulfilled' ? 'По Вашему запросу видео не найдены.' : 'Ошибка загрузки данных.'}/>\n              </Col>\n            </Row> :\n            <SearchResults />\n          }\n        </Col>\n      </Row>\n\n      <Modal\n        title={null}\n        visible={isModalVisible}\n        closable={false}\n        footer={null}\n        onCancel={() => setIsModalVisible(false)}\n      >\n        <h3\n          style={{\n            fontFamily: 'Roboto, sans-serif',\n            textAlign: 'center', fontSize: 18,\n            margin: 0,\n            padding: '15px 0 35px',\n          }}\n        >\n          Сохранить запрос\n        </h3>\n        <FavoritesForm\n          initialValues={{\n            id: '',\n            title: '',\n            query: searchQuery,\n            order: 'relevance',\n            resultsPerPage: 1,\n          }}\n          onSubmit={saveToFavorites}\n          onCancel={() => setIsModalVisible(false)}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default SearchScreen;\n","import { FC } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport {\r\n  FavoritesScreen,\r\n  LoginScreen,\r\n  SearchScreen,\r\n  NotFoundScreen,\r\n} from '../screens';\r\nimport { useRouteGuard } from './useRouteGuard';\r\n\r\nexport const RouterView: FC = () => {\r\n  useRouteGuard();\r\n\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        component={SearchScreen}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/login\"\r\n        component={LoginScreen}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/favorites\"\r\n        component={FavoritesScreen}\r\n      />\r\n      <Route\r\n        path=\"*\"\r\n        component={NotFoundScreen}\r\n      />\r\n    </Switch>\r\n  );\r\n};\r\n","import { useLocation, useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { RootState } from '../store';\r\n\r\nexport const useRouteGuard = () => {\r\n  const { pathname } = useLocation();\r\n  const routeHistory = useHistory();\r\n  const { isLoggedIn } = useSelector((state: RootState) => state.user);\r\n\r\n  if (!isLoggedIn && pathname !== '/login') {\r\n    routeHistory.push('/login');\r\n  }\r\n\r\n  return null;\r\n};\r\n","import { FC, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Layout, Row, Col } from 'antd';\n\nimport { RootState } from './store';\nimport { setSavedFavorites } from './store/favoritesSlice';\n\nimport { RouterView } from './router';\nimport { Header } from './components';\n\ninterface AppProps {}\n\nconst App: FC<AppProps> = () => {\n  const reduxDispatch = useDispatch();\n  const { isLoggedIn, userId } = useSelector((state: RootState) => state.user);\n\n  useEffect(() => {\n    const dataFromLocalStorage = localStorage.getItem(userId) || '';\n    const favorites = dataFromLocalStorage ? JSON.parse(dataFromLocalStorage) : [];\n\n    reduxDispatch(setSavedFavorites(favorites));\n  });\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      {isLoggedIn && (\n        <Layout.Header style={{ background: '#ffffff', padding: 0 }}>\n          <Row justify=\"center\">\n            <Col\n              xs={{ span: 23 }}\n              sm={{ span: 22 }}\n              md={{ span: 22 }}\n              lg={{ span: 20 }}\n              xxl={{ span: 16 }}\n            >\n              <Header />\n            </Col>\n          </Row>\n        </Layout.Header>\n      )}\n\n      <Layout.Content>\n        <RouterView />\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport youtubeSearch from './youtubeSearchSlice';\nimport user from './userSlice';\nimport favorites from './favoritesSlice';\nimport route from './routeSlice';\n\nexport const store = configureStore({\n  reducer: {\n    youtubeSearch,\n    user,\n    favorites,\n    route,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n","import ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\nimport { store } from './store';\n\nimport './index.css';\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </ReduxProvider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInfoWrapper\":\"SearchResults_searchInfoWrapper__1uHxD\",\"videoList\":\"SearchResults_videoList__3D5R5\",\"videoListItem\":\"SearchResults_videoListItem__1-MP1\",\"queryTitle\":\"SearchResults_queryTitle__1QgO_\",\"videosCount\":\"SearchResults_videosCount__2150p\",\"viewsCount\":\"SearchResults_viewsCount__1B0an\",\"videoLink\":\"SearchResults_videoLink__3bR01\",\"channelLink\":\"SearchResults_channelLink__3r7zM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LoginForm_wrapper__3Nwc8\",\"title\":\"LoginForm_title__3ZQ_I\",\"form\":\"LoginForm_form__m7jhh\",\"label\":\"LoginForm_label__3w4Np\",\"input\":\"LoginForm_input__h9oQA\",\"passwInput\":\"LoginForm_passwInput__1cBSq\",\"inputWrapper\":\"LoginForm_inputWrapper__2ahvN\",\"icon\":\"LoginForm_icon__22dgL\",\"btnWrapper\":\"LoginForm_btnWrapper__E3vYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchTitle\":\"SearchScreen_searchTitle__kiJIs\",\"searchResultTitle\":\"SearchScreen_searchResultTitle__3XPvV\",\"form\":\"SearchScreen_form__1wSrV\",\"input\":\"SearchScreen_input__1oZ0B\",\"inputWrapper\":\"SearchScreen_inputWrapper__1EReX\",\"icon\":\"SearchScreen_icon__2Qdgz\",\"toolTipWrapper\":\"SearchScreen_toolTipWrapper__yI53N\",\"loaderIndicator\":\"SearchScreen_loaderIndicator__2CX4L\",\"searchBtn\":\"SearchScreen_searchBtn__2TLwU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FavoritesForm_label__2DGU2\",\"btnWrapper\":\"FavoritesForm_btnWrapper__1Op4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"FavoritesScreen_title__2_lDt\",\"favoritesList\":\"FavoritesScreen_favoritesList__1RtFm\",\"itemTitle\":\"FavoritesScreen_itemTitle__3l2pI\",\"editLink\":\"FavoritesScreen_editLink__1Hd4s\",\"deleteLink\":\"FavoritesScreen_deleteLink__ia70Z\"};"],"sourceRoot":""}