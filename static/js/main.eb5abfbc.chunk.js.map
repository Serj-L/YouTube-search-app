{"version":3,"sources":["components/SearchResults/SearchResults.module.css","components/CardsView/CardsView.module.css","components/FavoritesForm/FavoritesForm.module.css","screens/FavoritesScreen/FavoritesScreen.module.css","components/Header/Header.module.css","components/ListView/ListView.module.css","firebaseInit.ts","api/firebase.ts","store/favoritesSlice.ts","store/screenParamsSlice.ts","store/userSlice.ts","api/youtube.ts","store/youtubeSearchSlice.ts","components/Logo.tsx","components/Header/Header.tsx","components/LoginForm/LoginForm.tsx","components/utils/utils.ts","components/SearchResults/SearchResults.tsx","components/ListView/ListView.tsx","components/CardsView/CardsView.tsx","components/FavoritesForm/FavoritesForm.tsx","screens/LoginScreen/LoginScreen.tsx","screens/SearchScreen/SearchScreen.tsx","screens/FavoritesScreen/FavoritesScreen.tsx","screens/NotFoundScreen/NotFoundScreen.tsx","router/index.tsx","router/useRouteGuard.ts","App.tsx","store/index.ts","index.tsx","components/LoginForm/LoginForm.module.css","screens/SearchScreen/SearchScreen.module.css"],"names":["module","exports","dataBase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","auth","getAuth","setPersistence","browserLocalPersistence","userAuth","data","a","isSignedForm","createUserWithEmailAndPassword","userEmail","password","signInWithEmailAndPassword","user","uid","saveFavoritesToDb","favorites","setDoc","doc","userId","getFavoritesFromDb","getDoc","saveFavoritesToDbThunk","createAsyncThunk","rejectWithValue","response","code","getFavoritesFromDbThunk","favoritesSlice","createSlice","name","initialState","updateDb","isLoading","isError","reducers","setFavorites","state","action","payload","favorite","query","title","id","order","resultsPerPage","push","deleteFavoriteItem","filter","item","editFavoriteItem","map","setFavoritesToInitialState","extraReducers","builder","addCase","pending","fulfilled","message","success","rejected","error","actions","screenParams","isMobile","searchScreenYOffset","favoriteScreenYOffset","searchResultsViewType","setIsMobile","setSearchScreenYOffset","setFavoriteScreenYOffset","setSearchResultsViewType","localStorage","getItem","userAuthThunk","userSlice","setUserId","setItem","instance","axios","create","baseURL","params","part","key","process","q","maxResults","type","getVideos","get","getVideosStats","videoId","searchVideos","searchVideosStats","youtubeSearchSlice","videos","totalCount","queryStatus","errorMessage","videoIdList","statsQueryStatus","isQueryInFavorites","setQuery","setIsQueryInFavorites","value","logOut","pageInfo","totalResults","items","v","snippet","channelTitle","description","channelId","thumbnail","width","thumbnails","medium","height","url","forEach","video","idx","arr","length","viewCount","el","statistics","console","log","LogoIcon","viewBox","fill","xmlns","fillRule","clipRule","d","Header","reduxDispatch","useDispatch","useSelector","pathname","useLocation","currentUser","align","wrap","flex","className","styles","logoWrapper","mode","selectedKeys","style","borderColor","Item","to","navlink","placement","color","trigger","Text","strong","display","marginBottom","email","textAlign","onClick","signOut","removeItem","shape","fontFamily","fontSize","backgroundColor","cursor","charAt","toUpperCase","stylesForInput","lineHeight","borderRadius","padding","stylesForBtn","LoginForm","onSubmit","onSwitchChange","initialValues","useState","passwordInputType","setPasswordInputType","passwordInputRef","useRef","wrapper","form","layout","onFinish","label","rules","required","input","inputWrapper","EyeInvisibleOutlined","icon","current","focus","EyeOutlined","passwInput","ref","valuePropName","onChange","btnWrapper","htmlType","numFormatter","Intl","NumberFormat","declOfNum","number","words","x","Math","abs","y","SearchResults","search","youtubeSearch","videoList","searchInfoWrapper","queryTitle","videosCount","format","disabled","window","pageYOffset","UnorderedListOutlined","AppstoreOutlined","ListView","itemLayout","dataSource","renderItem","Meta","avatar","Link","href","target","preview","src","alt","Paragraph","ellipsis","rows","expandable","videoLink","viewsCount","channelLink","Number","round","CardsView","videoListItem","bodyStyle","border","cover","FavoritesForm","onCancel","editMode","sliderInputValue","setSliderInputValue","Form","useForm","buttonTexts","useMemo","cancelBtn","okBtn","useEffect","resetFields","placeholder","size","suffixIcon","CaretDownOutlined","Option","marginRight","min","max","ghost","LoginScreen","routeHistory","useHistory","setIsSignedForm","justify","xs","span","sm","md","lg","xxl","maxWidth","isInFavorites","searchQuery","toLowerCase","trim","openNotificationWithIcon","notification","SearchScreen","isModalVisible","setIsModalVisible","setSearchQuery","scrollTo","useLayoutEffect","checkIsQueryInFavorite","minHeight","searchResultTitle","searchTitle","toolTipWrapper","marginTop","fontWeight","zIndex","HeartFilled","visibility","HeartOutlined","defaultValue","e","searchBtn","spinning","indicator","LoadingOutlined","position","top","left","visible","closable","footer","margin","values","uuidV4","confirm","Modal","FavoritesScreen","activeItem","setActiveItem","makeSearch","searchInput","paddingTop","spin","favoritesList","flexWrap","editLink","deleteLink","ExclamationCircleOutlined","okText","cancelText","onOk","itemTitle","favoriteItem","content","relevance","date","rating","lowerCaseTrimQuery","NotFoundScreen","RouterView","useRouteGuard","exact","path","component","App","innerWidth","screenWidth","setScreenWidth","handleWindowResize","addEventListener","removeEventListener","background","Content","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb5abfbc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInfoWrapper\":\"SearchResults_searchInfoWrapper__1uHxD\",\"queryTitle\":\"SearchResults_queryTitle__1QgO_\",\"videosCount\":\"SearchResults_videosCount__2150p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoList\":\"CardsView_videoList__1wcPb\",\"videoListItem\":\"CardsView_videoListItem__33INw\",\"videoLink\":\"CardsView_videoLink__ew3OW\",\"channelLink\":\"CardsView_channelLink__32_LB\",\"viewsCount\":\"CardsView_viewsCount__3jL0p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FavoritesForm_label__2DGU2\",\"btnWrapper\":\"FavoritesForm_btnWrapper__1Op4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"FavoritesScreen_title__2_lDt\",\"favoritesList\":\"FavoritesScreen_favoritesList__1RtFm\",\"itemTitle\":\"FavoritesScreen_itemTitle__3l2pI\",\"editLink\":\"FavoritesScreen_editLink__1Hd4s\",\"deleteLink\":\"FavoritesScreen_deleteLink__ia70Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoWrapper\":\"Header_logoWrapper__20zeq\",\"navlink\":\"Header_navlink__RNhPn\",\"menuItem\":\"Header_menuItem__3F_MM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"videoLink\":\"ListView_videoLink__2g_1O\",\"channelLink\":\"ListView_channelLink__1Rz0s\",\"viewsCount\":\"ListView_viewsCount__1mvbB\"};","import { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\n\nexport const firebaseApp = initializeApp({\n  apiKey: 'AIzaSyByiMgQXzByXmCRjcsTm5RCadKOQ9SiiPA',\n  authDomain: 'search-app-9c54b.firebaseapp.com',\n  projectId: 'search-app-9c54b',\n  storageBucket: 'search-app-9c54b.appspot.com',\n  messagingSenderId: '533183716632',\n  appId: '1:533183716632:web:a7efb5b5da647a9398526d',\n});\n\nexport const dataBase = getFirestore();\n","import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, setPersistence, browserLocalPersistence } from 'firebase/auth';\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\n\nimport { IUserLoginInput, IFirebaseLoginResponse, IFavoritesFirebase } from './types';\n\nimport { dataBase } from '../firebaseInit';\n\nexport const auth = getAuth();\n\nsetPersistence(auth, browserLocalPersistence);\n\nexport const userAuth = async (data: IUserLoginInput): Promise<IFirebaseLoginResponse> => {\n  const { user } = data.isSignedForm ?\n    await createUserWithEmailAndPassword(auth, data.userEmail, data.password) :\n    await signInWithEmailAndPassword(auth, data.userEmail, data.password);\n\n  return { uid: user.uid };\n};\n\nexport const saveFavoritesToDb = async (favorites: IFavoritesFirebase) => {\n  await setDoc(doc(dataBase, 'users', favorites.userId), { favorites: favorites.favorites });\n};\n\nexport const getFavoritesFromDb = async (userId: string) => {\n  const favorites = await getDoc(doc(dataBase, 'users', userId));\n  return favorites.data();\n};\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport { message } from 'antd';\n\nimport { getFavoritesFromDb, saveFavoritesToDb } from '../api/firebase';\n\nimport { IFavoritesInput, IFavoritesFirebase } from '../api/types';\n\ninterface IFavoritesSlice {\n  favorites: IFavoritesInput[];\n  updateDb: boolean;\n  isLoading: boolean;\n  isError: boolean;\n}\n\nconst initialState = {\n  favorites: [],\n  updateDb: false,\n  isLoading: false,\n  isError: false,\n} as IFavoritesSlice;\n\nexport const saveFavoritesToDbThunk = createAsyncThunk(\n  'user/saveFavoritesToDbThunk',\n  async (favorites: IFavoritesFirebase, { rejectWithValue }) => {\n    try {\n      const response = await saveFavoritesToDb(favorites);\n\n      return response;\n    } catch(err: any) {\n      return rejectWithValue(err.code);\n    }\n  },\n);\n\nexport const getFavoritesFromDbThunk = createAsyncThunk(\n  'user/getFavoritesFromDbThunk',\n  async (userId: string, { rejectWithValue }) => {\n    try {\n      const response = await getFavoritesFromDb(userId);\n\n      return response;\n    } catch(err: any) {\n      return rejectWithValue(err.code);\n    }\n  },\n);\n\nconst favoritesSlice = createSlice({\n  name: 'favorites',\n  initialState,\n  reducers: {\n    setFavorites(state, action: PayloadAction<IFavoritesInput>) {\n      const { query, title, id, order, resultsPerPage } = action.payload;\n      const favorite: IFavoritesInput = {\n        query,\n        title,\n        id,\n        order,\n        resultsPerPage,\n      };\n\n      state.favorites.push(favorite);\n      state.updateDb = true;\n    },\n    deleteFavoriteItem(state, action: PayloadAction<{ id: string }>) {\n      state.favorites = state.favorites.filter(item => item.id !== action.payload.id);\n      state.updateDb = true;\n    },\n    editFavoriteItem(state, action: PayloadAction<IFavoritesInput>) {\n      const { query, title, id, order, resultsPerPage } = action.payload;\n      const favorite: IFavoritesInput = {\n        query,\n        title,\n        id,\n        order,\n        resultsPerPage,\n      };\n\n      state.favorites = state.favorites.map(item => {\n        return item.id === favorite.id ? favorite : item;\n      });\n      state.updateDb = true;\n    },\n    setFavoritesToInitialState(state) {\n      state.favorites = [];\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(saveFavoritesToDbThunk.pending, (state) => {\n      state.isLoading = true;\n      if (state.isError) state.isError = false;\n    });\n    builder.addCase(saveFavoritesToDbThunk.fulfilled, (state) => {\n      message.success('Раздел \"Избранное\" успешно обновлен.');\n      state.isLoading = false;\n      if (state.updateDb) state.updateDb = false;\n    });\n    builder.addCase(saveFavoritesToDbThunk.rejected, (state, action) => {\n      message.error(`Ошибка: ${action.payload}`);\n      state.isLoading = false;\n      state.isError = true;\n      if (state.updateDb) state.updateDb = false;\n    });\n    builder.addCase(getFavoritesFromDbThunk.pending, (state) => {\n      state.isLoading = true;\n      if (state.isError) state.isError = false;\n    });\n    builder.addCase(getFavoritesFromDbThunk.fulfilled, (state, action) => {\n      const payload = action.payload as IFavoritesSlice;\n\n      if (payload) state.favorites = payload.favorites;\n      state.isLoading = false;\n    });\n    builder.addCase(getFavoritesFromDbThunk.rejected, (state, action) => {\n      message.error(`Ошибка: ${action.payload}`);\n      state.isLoading = false;\n      state.isError = true;\n    });\n  },\n});\n\nexport const { setFavorites, deleteFavoriteItem, editFavoriteItem, setFavoritesToInitialState } = favoritesSlice.actions;\nexport default favoritesSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface IScreenParamsState {\n  isMobile: boolean;\n  searchScreenYOffset: number;\n  favoriteScreenYOffset: number;\n  searchResultsViewType: string;\n}\n\nconst initialState = {\n  isMobile: false,\n  searchScreenYOffset: 0,\n  favoriteScreenYOffset: 0,\n  searchResultsViewType: 'list',\n} as IScreenParamsState;\n\nconst screenParams = createSlice({\n  name: 'screenParams',\n  initialState,\n  reducers: {\n    setIsMobile(state, action: PayloadAction<boolean>) {\n      state.isMobile = action.payload;\n    },\n    setSearchScreenYOffset(state, action: PayloadAction<number>) {\n      state.searchScreenYOffset = action.payload;\n    },\n    setFavoriteScreenYOffset(state, action: PayloadAction<number>) {\n      state.favoriteScreenYOffset = action.payload;\n    },\n    setSearchResultsViewType(state, action: PayloadAction<string>) {\n      state.searchResultsViewType = action.payload;\n    },\n  },\n});\n\nexport const {\n  setIsMobile,\n  setSearchScreenYOffset,\n  setFavoriteScreenYOffset,\n  setSearchResultsViewType,\n} = screenParams.actions;\nexport default screenParams.reducer;\n","import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\nimport { message } from 'antd';\n\nimport { userAuth } from '../api/firebase';\nimport { IUserLoginInput, IFirebaseLoginResponse } from '../api/types';\n\ninterface IUserState {\n  userId: string;\n}\n\nconst initialState = {\n  userId: localStorage.getItem('authToken') || '',\n} as IUserState;\n\nexport const userAuthThunk = createAsyncThunk(\n  'user/userAuthThunk',\n  async (data: IUserLoginInput, { rejectWithValue }) => {\n    try {\n      const response = await userAuth(data);\n\n      return response;\n    } catch(err: any) {\n      return rejectWithValue(err.code);\n    }\n  },\n);\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUserId(state, action: PayloadAction<string>) {\n      state.userId = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(userAuthThunk.fulfilled, (state, action) => {\n      const payload = action.payload as IFirebaseLoginResponse;\n\n      state.userId = payload.uid;\n      localStorage.setItem('authToken', payload.uid);\n    });\n    builder.addCase(userAuthThunk.rejected, (state, action) => {\n      state.userId = '';\n      message.error(`Ошибка: ${action.payload}`);\n    });\n  },\n});\n\nexport const { setUserId } = userSlice.actions;\nexport default userSlice.reducer;\n","import axios from 'axios';\n\nimport { ISearchVideoInput, ISearchVideoResponse, ISearchVideoStatsResponse } from './types';\n\nconst instance = axios.create({\n  baseURL: 'https://www.googleapis.com/youtube/v3/',\n  params: {\n    part: 'snippet',\n    key: process.env.REACT_APP_YOUTUBE_KEY,\n    q: '',\n    order: 'relevance',\n    maxResults: 12,\n    resultsPerPage: 12,\n    type: 'video',\n  },\n});\n\nexport const getVideos = async (params: ISearchVideoInput): Promise<ISearchVideoResponse> => {\n  const { data } = await instance.get('/search', {\n    params,\n  });\n\n  return data;\n};\n\nexport const getVideosStats = async (videoId: string): Promise<ISearchVideoStatsResponse> => {\n  const { data } = await axios.get(`https://www.googleapis.com/youtube/v3/videos?key=${process.env.REACT_APP_YOUTUBE_KEY}&fields=items(snippet(title,channelTitle,publishedAt),id,statistics(viewCount))&part=snippet,statistics&id=${videoId}`);\n\n  return data;\n};\n","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\n\nimport { getVideos, getVideosStats } from '../api/youtube';\nimport { ISearchVideoInput, ISearchVideoResponse, ISearchVideoStatsResponse } from '../api/types';\n\nexport const searchVideos = createAsyncThunk(\n  'youtubeSearch/searchVideos',\n  async (params: ISearchVideoInput, { rejectWithValue }) => {\n    try {\n      const response = await getVideos(params);\n\n      return response;\n    } catch(err: any) {\n      return rejectWithValue(err.message);\n    }\n  },\n);\n\nexport const searchVideosStats = createAsyncThunk(\n  'youtubeSearch/getVideosStats',\n  async (videoId: string, { rejectWithValue }) => {\n    try {\n      const response = await getVideosStats(videoId);\n\n      return response;\n    } catch(err: any) {\n      return rejectWithValue(err.message);\n    }\n  },\n);\nexport interface IVideoItem {\n  videoId: string;\n  title: string;\n  description: string;\n  channelTitle: string;\n  channelId: string;\n  thumbnail: {\n    width: number;\n    height: number;\n    url: string;\n  }\n  viewCount?: string;\n}\ninterface IYoutubeSearchState {\n  videos: IVideoItem[];\n  totalCount: number;\n  isLoading: boolean;\n  query: string;\n  queryStatus: string;\n  errorMessage: string;\n  videoIdList: string;\n  statsQueryStatus: string;\n  isQueryInFavorites: boolean;\n}\n\nconst initialState = {\n  videos: [],\n  totalCount: 0,\n  isLoading: false,\n  query: '',\n  queryStatus: '',\n  errorMessage: '',\n  videoIdList: '',\n  statsQueryStatus: '',\n  isQueryInFavorites: false,\n} as IYoutubeSearchState;\n\nconst youtubeSearchSlice = createSlice({\n  name: 'youtubeSearch',\n  initialState,\n  reducers: {\n    setQuery(state, action: PayloadAction<{ query: string }>) {\n      state.query = action.payload.query;\n    },\n    setIsQueryInFavorites(state, action: PayloadAction<{ value: boolean }>) {\n      state.isQueryInFavorites = action.payload.value;\n    },\n    logOut(state) {\n      state.videos = [];\n      state.totalCount = 0;\n      state.isLoading = false;\n      state.query = '';\n      state.queryStatus = '';\n      state.errorMessage = '';\n      state.videoIdList = '';\n      state.statsQueryStatus = '';\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(searchVideos.pending, (state) => {\n      state.isLoading = true;\n      state.queryStatus = 'pending';\n      state.errorMessage = '';\n    });\n    builder.addCase(searchVideos.fulfilled, (state, action) => {\n      const payload = action.payload as ISearchVideoResponse;\n\n      state.totalCount = payload.pageInfo.totalResults;\n      state.videos = payload.items.map((v) => ({\n        videoId: v.id.videoId,\n        title: v.snippet.channelTitle,\n        description: v.snippet.description,\n        channelTitle: v.snippet.channelTitle,\n        channelId: v.snippet.channelId,\n        thumbnail: {\n          width: v.snippet.thumbnails.medium.width,\n          height: v.snippet.thumbnails.medium.height,\n          url: v.snippet.thumbnails.medium.url,\n        },\n      }));\n      state.videoIdList = '';\n      state.videos.forEach((video, idx, arr) => {\n        idx < arr.length - 1 ? state.videoIdList += (video.videoId + ',') : state.videoIdList += video.videoId;\n      });\n\n      state.isLoading = false;\n      state.queryStatus = 'fulfilled';\n      state.errorMessage = '';\n      state.statsQueryStatus = 'getStats';\n    });\n    builder.addCase(searchVideos.rejected, (state, action) => {\n      state.isLoading = false;\n      state.queryStatus = 'rejected';\n      state.errorMessage = `${action.payload}`;\n    });\n    builder.addCase(searchVideosStats.pending, (state) => {\n      state.statsQueryStatus = 'pending';\n    });\n    builder.addCase(searchVideosStats.fulfilled, (state, action) => {\n      const payload = action.payload as ISearchVideoStatsResponse;\n      state.videos.map(video => {\n        video.viewCount = payload.items.filter(el => el.id === video.videoId)[0]?.statistics.viewCount;\n        return video;\n      });\n      state.statsQueryStatus = 'fulfilled';\n    });\n    builder.addCase(searchVideosStats.rejected, (state, action) => {\n      state.statsQueryStatus = 'rejected';\n      console.log('view counts recive error', action.payload);\n    });\n  },\n});\n\nexport const { setQuery, logOut, setIsQueryInFavorites } = youtubeSearchSlice.actions;\nexport default youtubeSearchSlice.reducer;\n","import { FC } from 'react';\n\ninterface LogoIconProps {\n  width?: number;\n  height?: number;\n}\n\nexport const LogoIcon: FC<LogoIconProps> = ({\n  width = 88,\n  height = 88,\n}) => {\n  return (<svg\n    width={width}\n    height={height}\n    viewBox=\"0 0 88 88\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M59.1488 43.5667L24.683 60.9559V79.399L59.1488 62.0098V43.5667Z\"\n      fill=\"#1390E5\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M24.683 26.1787L59.1487 43.5679V62.0111L24.683 44.6218V26.1787Z\"\n      fill=\"#1180CB\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M59.1488 8.79071L24.683 26.1799V44.623L59.1488 27.2338V8.79071Z\"\n      fill=\"#35A2EC\"\n    />\n  </svg>);\n};\n","import { FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { getAuth, signOut } from 'firebase/auth';\nimport { Menu, Row, Col, Avatar, Tooltip, Typography } from 'antd';\n\nimport { setUserId } from '../../store/userSlice';\nimport { logOut } from '../../store/youtubeSearchSlice';\nimport { setFavoritesToInitialState } from '../../store/favoritesSlice';\n\nimport { auth } from '../../api/firebase';\n\nimport { RootState } from '../../store';\n\nimport { LogoIcon } from '../Logo';\n\nimport styles from './Header.module.css';\n\ninterface HeaderProps {}\n\nconst Header: FC<HeaderProps> = () => {\n  const reduxDispatch = useDispatch();\n  const { isMobile } = useSelector((state: RootState) => state.screenParams);\n  const { pathname } = useLocation();\n  const user = auth.currentUser;\n\n  return (\n    <Row\n      align=\"middle\"\n      wrap={false}\n    >\n      <Col flex='none'>\n        <div className={styles.logoWrapper}>\n          <LogoIcon\n            width={44}\n            height={44}\n          />\n        </div>\n      </Col>\n      <Col flex='auto'>\n        <Menu\n          mode='horizontal'\n          selectedKeys={[pathname]}\n          style={{ borderColor: 'transparent' }}\n        >\n          <Menu.Item key='/'>\n            <NavLink\n              to={'/'}\n              className={styles.navlink}\n            >\n              Поиск\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key='/favorites'>\n            <NavLink\n              to={'/favorites'}\n              className={styles.navlink}\n            >\n              Избранное\n            </NavLink>\n          </Menu.Item>\n        </Menu>\n      </Col>\n      <Col flex='none'>\n        <Tooltip\n          placement='bottomRight'\n          color='#ffffff'\n          trigger={isMobile ? ['click'] : ['hover']}\n          title={\n            <>\n              <Typography.Text\n                strong\n                style={{\n                  display: 'block',\n                  marginBottom: 5,\n                }}\n              >\n                {user?.email ? `Пользователь: ${user.email}` : ''}\n              </Typography.Text>\n              <NavLink\n                className={styles.navlink}\n                style={{\n                  display: 'block',\n                  textAlign: 'center',\n                }}\n                to={'/login'}\n                onClick={() => {\n                  signOut(getAuth());\n                  localStorage.removeItem('authToken');\n                  reduxDispatch(setUserId(''));\n                  reduxDispatch(logOut());\n                  reduxDispatch(setFavoritesToInitialState());\n                }}\n              >\n                Выйти\n              </NavLink>\n            </>\n          }\n        >\n          <Avatar\n            shape=\"square\"\n            style={{\n              fontFamily: 'Roboto, sans-serif',\n              fontSize: 16,\n              color: '#ffffff',\n              backgroundColor: '#1890ff',\n              cursor: 'pointer',\n            }}\n          >\n            {user?.email?.charAt(0).toUpperCase() || 'П'}\n          </Avatar>\n        </Tooltip>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Header;\n","import { FC, useState, useRef } from 'react';\nimport { Form, Input, Switch, Button } from 'antd';\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\n\nimport { IUserLoginInput } from '../../api/types';\n\nimport { LogoIcon } from '../Logo';\n\nimport styles from './LoginForm.module.css';\n\ninterface LoginFormProps {\n  onSubmit: (values: IUserLoginInput) => void;\n  onSwitchChange: () => void;\n  initialValues: IUserLoginInput;\n  isSignedForm: boolean;\n}\n\nconst stylesForInput = {\n  fontFamily: 'Roboto, sans-serif',\n  fontSize: 20,\n  lineHeight: 0,\n  borderRadius: 5,\n  padding: '12px 15px',\n};\n\nconst stylesForBtn = {\n  fontFamily: 'Roboto, sans-serif',\n  fontSize: 20,\n  lineHeight: '100%',\n  width: 170,\n  height: 50,\n  borderRadius: 5,\n};\n\nconst LoginForm: FC<LoginFormProps> = ({\n  onSubmit,\n  onSwitchChange,\n  initialValues,\n  isSignedForm,\n}) => {\n  const [passwordInputType, setPasswordInputType] = useState('password');\n  const passwordInputRef = useRef<Input>(null);\n\n  return (\n    <div className={styles.wrapper}>\n      <LogoIcon />\n      <h3 className={styles.title}>{isSignedForm ? 'Регистрация и вход' : 'Вход'}</h3>\n      <Form\n        className={styles.form}\n        name=\"basic\"\n        initialValues={initialValues}\n        layout=\"vertical\"\n        onFinish={onSubmit}\n      >\n        <span className={styles.label}>Логин (Email)</span>\n        <Form.Item\n          name=\"userEmail\"\n          rules={[{ required: true, message: 'Введите логин' }]}\n        >\n          <Input\n            className={styles.input}\n            style={stylesForInput}\n          />\n        </Form.Item>\n\n        <span className={styles.label}>Пароль</span>\n        <Form.Item\n          name=\"password\"\n          rules={[{ required: true, message: 'Введите пароль' }]}\n        >\n          <div className={styles.inputWrapper}>\n            {\n              passwordInputType === 'password' ?\n                <EyeInvisibleOutlined\n                  className={styles.icon}\n                  onClick={() => {\n                    setPasswordInputType('text');\n                    passwordInputRef.current?.focus();\n                  }}\n                /> :\n                <EyeOutlined\n                  className={styles.icon}\n                  onClick={() =>{\n                    setPasswordInputType('password');\n                    passwordInputRef.current?.focus();\n                  }}\n                />\n            }\n            <Input\n              className={styles.passwInput}\n              style={stylesForInput}\n              type={passwordInputType}\n              ref={passwordInputRef}\n            />\n          </div>\n        </Form.Item>\n\n        <span className={styles.label}>Регистрация нового пользователя и вход</span>\n        <Form.Item\n          name='isSignedForm'\n          valuePropName='checked'>\n          <Switch onChange={onSwitchChange}/>\n        </Form.Item>\n\n        <Form.Item >\n          <div className={styles.btnWrapper}>\n            <Button\n              style={stylesForBtn}\n              type=\"primary\"\n              htmlType=\"submit\"\n            >\n              {isSignedForm ? 'Регистрация' : 'Вход'}\n            </Button>\n          </div>\n        </Form.Item>\n\n      </Form>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","export const numFormatter = new Intl.NumberFormat('ru');\n\nexport const declOfNum = (number: number, words: string[]): string => {\n  const x = Math.abs(number) % 100;\n  const y = x % 10;\n\n  if (x > 10 && x < 20) return words[2];\n\n  if (y > 1 && y < 5) return words[1];\n\n  if (y === 1) return words[0];\n\n  return words[2];\n};\n","import { FC } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Typography,Row, Col, Space, Button } from 'antd';\nimport { UnorderedListOutlined, AppstoreOutlined } from '@ant-design/icons';\n\nimport { RootState } from '../../store';\nimport { setSearchResultsViewType, setSearchScreenYOffset } from '../../store/screenParamsSlice';\n\nimport { ListView, CardsView } from '../../components/';\nimport { numFormatter } from '../../components/utils/utils';\n\nimport styles from './SearchResults.module.css';\n\ninterface SearchResultsProps {}\n\nconst SearchResults: FC<SearchResultsProps> = () => {\n  const reduxDispatch = useDispatch();\n  const search = useSelector((state: RootState) => state.youtubeSearch);\n  const videoList = useSelector((state: RootState) => state.youtubeSearch.videos);\n  const { isMobile, searchResultsViewType, searchScreenYOffset } = useSelector((state: RootState) => state.screenParams);\n\n  if (search.queryStatus !== 'fulfilled' && search.statsQueryStatus !== 'fulfilled') return null;\n\n  return (\n    <div\n      className={styles.wrapper}>\n      <Row className={styles.searchInfoWrapper}>\n        <Col flex='auto'>\n          <Typography.Text className={styles.queryTitle}>Видео по запросу</Typography.Text>\n          <Typography.Text\n            className={styles.queryTitle}\n            strong\n          >\n            {`«${search.query}»`}\n          </Typography.Text>\n          <Typography.Text\n            className={styles.videosCount}\n            style={{ color: 'rgba(23, 23, 25, 0.3)' }}\n          >\n            {numFormatter.format(search.totalCount)}\n          </Typography.Text>\n        </Col>\n        <Col flex='60px'>\n          <Space>\n            <Button\n              type='text'\n              style={{\n                padding: 5,\n                color: searchResultsViewType === 'list' ? '#000000' : 'rgba(23, 23, 25, 0.3)',\n              }}\n              disabled={searchResultsViewType === 'list'}\n              onClick = {() => {\n                reduxDispatch(setSearchResultsViewType('list'));\n                if (isMobile && searchScreenYOffset !== window.pageYOffset) reduxDispatch(setSearchScreenYOffset(window.pageYOffset));\n              }}\n            >\n              <UnorderedListOutlined style={{ fontSize: 20 }} />\n            </Button>\n            <Button\n              type='text'\n              style={{\n                padding: 5,\n                color: searchResultsViewType === 'cards' ? '#000000' : 'rgba(23, 23, 25, 0.3)',\n              }}\n              disabled={searchResultsViewType === 'cards'}\n              onClick = {() => {\n                reduxDispatch(setSearchResultsViewType('cards'));\n                if (isMobile && searchScreenYOffset !== window.pageYOffset) reduxDispatch(setSearchScreenYOffset(window.pageYOffset));\n              }}\n            >\n              <AppstoreOutlined style={{ fontSize: 20 }} />\n            </Button>\n          </Space>\n        </Col>\n      </Row>\n      {searchResultsViewType === 'list'\n        ? <ListView data={videoList} />\n        : <CardsView data={videoList} />\n      }\n    </div>\n  );\n};\n\nexport default SearchResults;\n","import { FC } from 'react';\nimport { List, Image, Typography } from 'antd';\n\nimport { IVideoItem } from '../../store/youtubeSearchSlice';\n\nimport { numFormatter, declOfNum } from '../utils/utils';\n\nimport styles from './ListView.module.css';\n\ninterface ListViewProps {\n  data: IVideoItem[];\n}\n\nconst ListView: FC<ListViewProps> = ({ data }) => {\n\n  return (\n    <List\n      itemLayout='horizontal'\n      dataSource={data}\n      renderItem={item => (\n        <List.Item key={item.videoId}>\n          <List.Item.Meta\n            avatar={\n              <Typography.Link\n                href={`https://www.youtube.com/watch?v=${item.videoId}`}\n                target='_blank'\n              >\n                <Image\n                  preview={false}\n                  width={157}\n                  height={88}\n                  src={item.thumbnail.url}\n                  alt='Video preview'\n                />\n              </Typography.Link>\n            }\n            title={\n              <Typography.Paragraph\n                ellipsis={{ rows: 2, expandable: false }}\n                style={{ marginBottom: 8 }}\n              >\n                <Typography.Link\n                  className={styles.videoLink}\n                  href={`https://www.youtube.com/watch?v=${item.videoId}`}\n                  target='_blank'\n                >\n                  {item.title} | {item.description}\n                </Typography.Link>\n              </Typography.Paragraph>\n            }\n            description={\n              <Typography.Text\n                className={styles.viewsCount}\n                style={{ color: 'rgba(23, 23, 25, 0.3)' }}\n              >\n                <Typography.Link\n                  className={styles.channelLink}\n                  style={{ color: 'rgba(23, 23, 25, 0.3)' }}\n                  href={`https://www.youtube.com/channel/${item.channelId}`}\n                  target='_blank'\n                >\n                  {item.channelTitle}\n                </Typography.Link>\n                <br />\n                {!item.viewCount ? 'Нет данных о количестве просмотров' :\n                  Number(item.viewCount) / 1000 >= 1 ?\n                    `${numFormatter.format(Math.round(Number(item.viewCount) / 1000))} тыс. просмотров` :\n                    `${item.viewCount} ${declOfNum(Number(item.viewCount),['просмотр', 'просмотра', 'просмотров'])}`}\n              </Typography.Text> }\n          />\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default ListView;\n","import { FC } from 'react';\nimport { Card, Image, Typography } from 'antd';\n\nimport { IVideoItem } from '../../store/youtubeSearchSlice';\n\nimport { numFormatter, declOfNum } from '../utils/utils';\n\nimport styles from './CardsView.module.css';\n\ninterface CardsViewProps {\n  data: IVideoItem[];\n}\n\nconst CardsView: FC<CardsViewProps> = ({ data }) => {\n\n  return (\n    <ul className={styles.videoList}>\n      {data.map(item => {\n        return (\n          <li\n            key = {item.videoId}\n            className={styles.videoListItem}\n          >\n            <Card\n              bodyStyle={{\n                padding: 0,\n              }}\n              style={{\n                width: 245,\n                backgroundColor: 'transparent',\n                border: 'none',\n              }}\n              cover={\n                <Typography.Link\n                  href={`https://www.youtube.com/watch?v=${item.videoId}`}\n                  target='_blank'\n                >\n                  <Image\n                    preview={false}\n                    width={245}\n                    height={138}\n                    src={item.thumbnail.url}\n                    alt='Video preview'\n                  />\n                </Typography.Link>\n              }\n            >\n              <Card.Meta\n                description={\n                  <>\n                    <Typography.Paragraph\n                      ellipsis={{ rows: 2, expandable: false }}\n                      style={{ marginBottom: 8 }}\n                    >\n                      <Typography.Link\n                        className={styles.videoLink}\n                        href={`https://www.youtube.com/watch?v=${item.videoId}`}\n                        target='_blank'\n                      >\n                        {item.title} | {item.description}\n                      </Typography.Link>\n                    </Typography.Paragraph>\n                    <Typography.Text\n                      className={styles.viewsCount}\n                      style={{ color: 'rgba(23, 23, 25, 0.3)' }}\n                    >\n                      <Typography.Link\n                        className={styles.channelLink}\n                        href={`https://www.youtube.com/channel/${item.channelId}`}\n                        target='_blank'\n                        style={{ color: 'rgba(23, 23, 25, 0.3)' }}\n                      >\n                        {item.channelTitle}\n                      </Typography.Link>\n                      <br />\n                      {Number(item.viewCount) / 1000 >= 1 ?\n                        `${numFormatter.format(Math.round(Number(item.viewCount) / 1000))} тыс. просмотров` :\n                        `${item.viewCount} ${declOfNum(Number(item.viewCount),['просмотр', 'просмотра', 'просмотров'])}`}\n                    </Typography.Text>\n                  </>\n                }\n              />\n            </Card>\n          </li>\n        );\n      })\n      }\n    </ul>\n  );\n};\n\nexport default CardsView;\n","import { FC, useState, useEffect, useMemo } from 'react';\nimport { Form, Input, InputNumber, Select, Button, Slider, Col, Row } from 'antd';\nimport { CaretDownOutlined } from '@ant-design/icons';\n\nimport { IFavoritesInput } from '../../api/types';\n\nimport styles from './FavoritesForm.module.css';\n\ninterface FavoritesFormProps {\n  onSubmit: (values: IFavoritesInput) => void;\n  onCancel: () => void;\n  initialValues: IFavoritesInput;\n  editMode?: boolean;\n}\n\nconst stylesForInput = {\n  fontFamily: 'Roboto, sans-serif',\n  lineHeight: 0,\n  fontSize: 20,\n  borderRadius: 5,\n  padding: '12px 15px',\n};\n\nconst stylesForBtn = {\n  fontFamily: 'Roboto, sans-serif',\n  fontSize: 20,\n  lineHeight: '100%',\n  width: 210,\n  height: 50,\n  borderRadius: 5,\n};\n\nconst FavoritesForm: FC<FavoritesFormProps> = ({\n  onSubmit,\n  onCancel,\n  initialValues,\n  editMode = false,\n}) => {\n  const [sliderInputValue, setSliderInputValue] = useState(1);\n  const [form] = Form.useForm();\n  const buttonTexts = useMemo(() => {\n    return editMode ? { cancelBtn: 'Не изменять', okBtn: 'Изменить' } : { cancelBtn: 'Не сохранять', okBtn: 'Сохранить' };\n  }, [editMode]);\n\n  useEffect(() => {\n    form.resetFields();\n  }, [form, initialValues]);\n\n  return (\n    <Form\n      form={form}\n      name='saveToFavorites'\n      id='saveToFavorites'\n      initialValues={initialValues}\n      layout='vertical'\n      onFinish={onSubmit}\n    >\n      <span className={styles.label}>Запрос</span>\n      <Form.Item\n        name='query'\n        rules={[{ required: true, message: 'Введите запрос' }]}\n      >\n        <Input\n          style={stylesForInput}\n          type='text'\n          disabled={!editMode}\n        />\n      </Form.Item>\n\n      <span className={styles.label}><span style={{ color: 'red' }}>* </span>Название</span>\n      <Form.Item\n        name='title'\n        rules={[{ required: true, message: 'Введите название' }]}\n      >\n        <Input\n          placeholder='Укажите название'\n          style={stylesForInput}\n          type='text'\n        />\n      </Form.Item>\n\n      <span className={styles.label}>Сортировать по</span>\n      <Form.Item name='order'>\n        <Select\n          size='large'\n          style={{\n            fontFamily: 'Roboto, sans-serif',\n            fontSize: 20,\n          }}\n          suffixIcon={<CaretDownOutlined />}\n        >\n          <Select.Option value='relevance'>Без сортировки</Select.Option>\n          <Select.Option value='title'>По названию</Select.Option>\n          <Select.Option value='date'>По дате релиза</Select.Option>\n          <Select.Option value='viewCount'>По количеству просмотров</Select.Option>\n          <Select.Option value='rating'>По рейтингу</Select.Option>\n        </Select>\n      </Form.Item>\n\n      <span className={styles.label}>Максимальное количество</span>\n      <Row align='middle'>\n        <Col flex='auto'>\n          <Form.Item name='resultsPerPage'>\n            <Slider\n              style={{ marginRight: 20 }}\n              min={1}\n              max={50}\n              value={sliderInputValue}\n              onChange={(value) => setSliderInputValue(value)}\n            />\n          </Form.Item>\n        </Col>\n        <Col flex='none'>\n          <Form.Item name='resultsPerPage'>\n            <InputNumber\n              style={{\n                fontFamily: 'Roboto, sans-serif',\n                lineHeight: 0,\n                fontSize: 20,\n                borderRadius: 5,\n                padding: '5px 0px 5px 20px',\n              }}\n              min={1}\n              max={50}\n              size='large'\n              value={sliderInputValue}\n              onChange={(value) => setSliderInputValue(value)}\n            />\n          </Form.Item>\n        </Col>\n      </Row>\n\n      <Form.Item >\n        <div className={styles.btnWrapper}>\n          <Button\n            style={stylesForBtn}\n            type='primary'\n            ghost\n            onClick={onCancel}\n          >\n            {buttonTexts.cancelBtn}\n          </Button>\n          <Button\n            style={stylesForBtn}\n            type='primary'\n            htmlType='submit'\n          >\n            {buttonTexts.okBtn}\n          </Button>\n        </div>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default FavoritesForm;\n","import { FC, useEffect, useState } from 'react';\nimport { Col, Row } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RootState } from '../../store';\nimport { userAuthThunk } from '../../store/userSlice';\n\nimport { LoginForm } from '../../components';\nimport { IUserLoginInput } from '../../api/types';\n\ninterface LoginScreenProps {}\n\nconst LoginScreen: FC<LoginScreenProps> = () => {\n  const routeHistory = useHistory();\n  const reduxDispatch = useDispatch();\n  const { userId } = useSelector((state: RootState) => state.user);\n  const [isSignedForm, setIsSignedForm] = useState(false);\n\n  useEffect(() => {\n    if (!userId) return;\n    routeHistory.push('/');\n  }, [routeHistory, userId]);\n\n  const onSubmit = (data: IUserLoginInput) => {\n    reduxDispatch(userAuthThunk(data));\n  };\n\n  const onSwitchChange = () => {\n    setIsSignedForm(!isSignedForm);\n  };\n\n  return (\n    <Row\n      justify=\"center\"\n      align=\"middle\"\n      style={{ height: '100vh' }}\n    >\n      <Col\n        xs={{ span: 23 }}\n        sm={{ span: 22 }}\n        md={{ span: 22 }}\n        lg={{ span: 20 }}\n        xxl={{ span: 16 }}\n        style={{ maxWidth: 510 }}\n      >\n        <LoginForm\n          initialValues={{ userEmail: '', password: '', isSignedForm: false }}\n          onSubmit={onSubmit}\n          onSwitchChange={onSwitchChange}\n          isSignedForm={isSignedForm}\n        />\n      </Col>\n    </Row>\n  );\n};\n\nexport default LoginScreen;\n","import { FC, useEffect, useLayoutEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Input, Form, Button, Row, Col, Modal, Tooltip, Typography, notification, Spin, Empty } from 'antd';\nimport { HeartOutlined, HeartFilled, LoadingOutlined } from '@ant-design/icons';\nimport { v4 as uuidV4 } from 'uuid';\n\nimport { RootState } from '../../store';\nimport { searchVideos, searchVideosStats, setQuery, setIsQueryInFavorites } from '../../store/youtubeSearchSlice';\nimport { setFavorites } from '../../store/favoritesSlice';\nimport { setSearchScreenYOffset } from '../../store/screenParamsSlice';\n\nimport { IFavoritesInput } from '../../api/types';\n\nimport { SearchResults, FavoritesForm } from '../../components';\n\nimport styles from './SearchScreen.module.css';\n\ninterface SearchScreenProps {}\n\nconst isInFavorites = (searchQuery: string, favorites: IFavoritesInput[] ): boolean => {\n  return favorites.filter(el => el.query === searchQuery.toLowerCase().trim()).length ? true : false;\n};\n\nconst openNotificationWithIcon = (type: 'success' | 'info' | 'warning' | 'error',\n  message: string,\n  description: string,\n  placement: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight') => {\n  notification[type]({\n    message,\n    description,\n    placement,\n  });\n};\n\nconst SearchScreen: FC<SearchScreenProps> = () => {\n  const reduxDispatch = useDispatch();\n  const search = useSelector((state: RootState) => state.youtubeSearch);\n  const { favorites } = useSelector((state: RootState) => state.favorites);\n  const { isMobile, searchScreenYOffset } = useSelector((state: RootState) => state.screenParams);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  useEffect (() => {\n    if (search.queryStatus !== 'fulfilled' || !isMobile) return;\n\n    window.scrollTo(0, searchScreenYOffset);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [window.pageYOffset]);\n\n  useLayoutEffect (() => {\n    if (!isMobile) return;\n\n    return () => {\n      if (searchScreenYOffset === window.pageYOffset) return;\n      reduxDispatch(setSearchScreenYOffset(window.pageYOffset));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isMobile, reduxDispatch]);\n\n  useEffect (() => {\n    const checkIsQueryInFavorite = isInFavorites(search.query, favorites);\n\n    if (checkIsQueryInFavorite === search.isQueryInFavorites) return;\n    reduxDispatch(setIsQueryInFavorites({ value: checkIsQueryInFavorite }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect (() => {\n    if (!search.errorMessage) return;\n    openNotificationWithIcon('error', 'Ошибка загрузки данных', search.errorMessage, 'topRight');\n  }, [search.errorMessage]);\n\n  useEffect (() => {\n    setSearchQuery(search.query);\n  }, [search.query]);\n\n  useEffect (() => {\n    if (search.statsQueryStatus !== 'getStats') return;\n    reduxDispatch(searchVideosStats(search.videoIdList));\n  }, [reduxDispatch, search.statsQueryStatus, search.videoIdList]);\n\n  const makeSearch = () => {\n    if (!searchQuery) {\n      openNotificationWithIcon('warning', 'Поиск не может быть осуществлен.', 'Введите, пожалуйста, поисковый запрос.', 'topRight');\n      return;\n    }\n\n    reduxDispatch(setQuery({ query: searchQuery.toLowerCase().trim() }));\n    reduxDispatch(searchVideos({ q: searchQuery.toLowerCase().trim() }));\n\n    const checkIsQueryInFavorite = isInFavorites(searchQuery, favorites);\n    if (checkIsQueryInFavorite !== search.isQueryInFavorites) reduxDispatch(setIsQueryInFavorites({ value: checkIsQueryInFavorite }));\n  };\n\n  const saveToFavorites = (values: IFavoritesInput) => {\n    reduxDispatch(setFavorites({ ...values, id: uuidV4() }));\n    setIsModalVisible(false);\n    reduxDispatch(setIsQueryInFavorites({ value: true }));\n  };\n\n  return (\n    <>\n      <Row\n        justify='center'\n        align={search.queryStatus !== 'fulfilled' && !search.videos.length ? 'middle' : 'top'}\n        style={{ minHeight: '80vh' }}\n\n      >\n        <Col\n          xs={{ span: 23 }}\n          sm={{ span: 22 }}\n          md={{ span: 22 }}\n          lg={{ span: 20 }}\n          xxl={{ span: 16 }}\n        >\n          {\n            search.queryStatus !== 'fulfilled' && !search.videos.length ?\n              <h1 className={styles.searchTitle}>Поиск видео</h1> :\n              <h2 className={styles.searchResultTitle}>Поиск видео</h2>\n          }\n          <Form\n            layout=\"vertical\"\n            className={styles.form}\n            onFinish={makeSearch}\n          >\n            <Form.Item\n              style={{\n                flex: 1,\n                maxWidth: search.queryStatus !== 'fulfilled' && !search.videos.length ? 535 : 'unset',\n                marginBottom: 0,\n              }}\n            >\n              <div className={styles.inputWrapper}>\n                <Tooltip\n                  className={styles.toolTipWrapper}\n                  placement='bottom'\n                  color='#ffffff'\n                  trigger={isMobile ? ['click'] : ['hover']}\n                  title={\n                    <>\n                      <Typography.Text\n                        strong\n                        style={{\n                          display: 'block',\n                          marginBottom: 15,\n                        }}\n                      >\n                        Запрос уже сохранён в разделе «Избранное»\n                      </Typography.Text>\n                      <NavLink\n                        style={{ marginTop: 15, fontWeight: 600 }}\n                        to={'/favorites'}\n                      >\n                        Перейти в «Избранное»\n                      </NavLink>\n                    </>\n                  }\n                  zIndex={search.isQueryInFavorites? 1 : -1}\n                >\n                  {search.isQueryInFavorites ?\n                    <HeartFilled\n                      className={styles.icon}\n                      style={{\n                        color: '#1890FF',\n                        visibility: search.videos.length ? 'visible' : 'hidden',\n                      }}\n                    /> :\n                    <HeartOutlined\n                      className={styles.icon}\n                      style={{\n                        color: '#1890FF',\n                        visibility: search.videos.length ? 'visible' : 'hidden',\n                      }}\n                      onClick={() => setIsModalVisible(true)}\n                    />\n                  }\n                </Tooltip>\n                <Input\n                  className={styles.input}\n                  style={{\n                    fontFamily: 'Roboto, sans-serif',\n                    fontSize: 20,\n                    lineHeight: 0,\n                    width: '100%',\n                    borderRadius: '5px 0px 0px 5px',\n                    padding: '12px 35px 12px 15px',\n                  }}\n                  placeholder=\"Что хотите посмотреть?\"\n                  defaultValue={search.query}\n                  value={searchQuery}\n                  onChange={(e) => {\n                    setSearchQuery(e.target.value);\n                    const checkIsQueryInFavorite = isInFavorites(e.target.value, favorites);\n                    if (checkIsQueryInFavorite !== search.isQueryInFavorites) reduxDispatch(setIsQueryInFavorites({ value: checkIsQueryInFavorite }));\n                  }}\n                />\n              </div>\n            </Form.Item>\n            <Form.Item style={{ marginBottom: 0 }}>\n              <Button\n                className={styles.searchBtn}\n                type='primary'\n                htmlType=\"submit\"\n                style={{\n                  fontFamily: 'Roboto, sans-serif',\n                  fontSize: 20,\n                  lineHeight: '100%',\n                  height: 50,\n                  borderRadius: '0px 5px 5px 0px',\n                }}\n              >\n                <Spin\n                  spinning={search.isLoading}\n                  indicator={\n                    <LoadingOutlined\n                      style={{\n                        position: 'absolute',\n                        fontSize: 24,\n                        color: '#ffffff',\n                        top: '25%',\n                        left: '7%',\n                      }}\n                    />\n                  }\n                />\n                Найти\n              </Button>\n            </Form.Item>\n          </Form>\n          {(search.queryStatus === 'fulfilled' || search.queryStatus === 'rejected') && !search.videos.length\n            ?\n            <Row\n              justify=\"center\"\n              style={{ marginTop: 30 }}\n            >\n              <Col flex='auto'>\n                <Empty description={search.queryStatus === 'fulfilled' ? 'По Вашему запросу видео не найдены.' : 'Ошибка загрузки данных.'}/>\n              </Col>\n            </Row>\n            :\n            <SearchResults />\n          }\n        </Col>\n      </Row>\n\n      <Modal\n        title={null}\n        visible={isModalVisible}\n        closable={false}\n        footer={null}\n        onCancel={() => setIsModalVisible(false)}\n      >\n        <h3\n          style={{\n            fontFamily: 'Roboto, sans-serif',\n            textAlign: 'center', fontSize: 18,\n            margin: 0,\n            padding: '15px 0 35px',\n          }}\n        >\n          Сохранить запрос\n        </h3>\n        <FavoritesForm\n          initialValues={{\n            id: '',\n            title: '',\n            query: searchQuery.toLowerCase().trim(),\n            order: 'relevance',\n            resultsPerPage: 1,\n          }}\n          onSubmit={saveToFavorites}\n          onCancel={() => setIsModalVisible(false)}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default SearchScreen;\n","import { FC, useState, useEffect, useLayoutEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { List, Typography, Row, Col, Modal, notification, Empty, Spin } from 'antd';\nimport { ExclamationCircleOutlined, LoadingOutlined } from '@ant-design/icons';\n\nimport { RootState } from '../../store';\nimport { editFavoriteItem, deleteFavoriteItem } from '../../store/favoritesSlice';\nimport { searchVideos, setQuery, setIsQueryInFavorites } from '../../store/youtubeSearchSlice';\nimport { setFavoriteScreenYOffset } from '../../store/screenParamsSlice';\n\nimport { IFavoritesInput } from '../../api/types';\n\nimport { FavoritesForm } from '../../components';\n\nimport styles from './FavoritesScreen.module.css';\n\ninterface FavoritesScreenProps {}\n\nconst isInFavorites = (searchQuery: string, id: string, favorites: IFavoritesInput[] ): boolean => {\n  return favorites.filter(el => el.query === searchQuery && el.id !== id).length ? true : false;\n};\n\nconst { confirm } = Modal;\n\nconst openNotificationWithIcon = (type: 'success' | 'info' | 'warning' | 'error',\n  message: string,\n  description: string,\n  placement: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight') => {\n  notification[type]({\n    message,\n    description,\n    placement,\n  });\n};\n\nconst FavoritesScreen: FC<FavoritesScreenProps> = () => {\n  const reduxDispatch = useDispatch();\n  const routeHistory = useHistory();\n  const { isQueryInFavorites } = useSelector((state: RootState) => state.youtubeSearch);\n  const { favorites, isLoading, isError } = useSelector((state: RootState) => state.favorites);\n  const { isMobile, favoriteScreenYOffset } = useSelector((state: RootState) => state.screenParams);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [activeItem, setActiveItem] = useState<IFavoritesInput>({\n    id: '',\n    title: '',\n    query: '',\n    order: 'relevance',\n    resultsPerPage: 1,\n  });\n\n  useEffect (() => {\n    if (!isMobile) return;\n\n    window.scrollTo(0, favoriteScreenYOffset);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [window.pageYOffset]);\n\n  useLayoutEffect (() => {\n    if (!isMobile) return;\n\n    return () => {\n      if (favoriteScreenYOffset === window.pageYOffset) return;\n      reduxDispatch(setFavoriteScreenYOffset(window.pageYOffset));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isMobile, reduxDispatch]);\n\n  const showConfirm = (title: string, id: string) => {\n    confirm({\n      title: `Удалить запрос «${title}» из «Избранного»?`,\n      icon: <ExclamationCircleOutlined />,\n      okText: 'Удалить',\n      cancelText: 'Отмена',\n      onOk() {\n        reduxDispatch(deleteFavoriteItem({ id }));\n      },\n    });\n  };\n\n  const showConfirmOpenQuery = (favoriteItem: IFavoritesInput) => {\n    const orderName = {\n      relevance: 'Без сортировки',\n      title: 'По названию',\n      date: 'По дате релиза',\n      viewCount: 'По количеству просмотров',\n      rating: 'По рейтингу',\n    };\n\n    confirm({\n      title: 'Выполнить запрос ?',\n      content:\n      <>\n        <Typography.Text style={{ display: 'block', marginBottom: 5 }}>Название: «{favoriteItem.title}»</Typography.Text>\n        <Typography.Text style={{ display: 'block', marginBottom: 5 }}>Запрос: «{favoriteItem.query}»</Typography.Text>\n        <Typography.Text style={{ display: 'block', marginBottom: 5 }}>Сортировка: «{orderName[favoriteItem.order]}»</Typography.Text>\n        <Typography.Text style={{ display: 'block' }}>Max количество видео: «{favoriteItem.resultsPerPage}»</Typography.Text>\n      </>,\n      okText: 'Выполнить',\n      cancelText: 'Отмена',\n      icon: <ExclamationCircleOutlined />,\n      onOk() {\n        makeSearch(favoriteItem.id);\n      },\n    });\n  };\n\n  const onEditFavoriteItem = (values: IFavoritesInput) => {\n    const lowerCaseTrimQuery = values.query.toLowerCase().trim();\n\n    if (isInFavorites(lowerCaseTrimQuery, activeItem.id, favorites)) {\n      openNotificationWithIcon('warning', `Запрос «${lowerCaseTrimQuery}» уже сохранен в «Избранном»`, 'Отредактируйте, пожалуйста, текст запроса, что бы сохранить изменения', 'topRight');\n      return;\n    }\n    reduxDispatch(editFavoriteItem({ ...values, query: lowerCaseTrimQuery, id: activeItem.id }));\n    setIsModalVisible(false);\n  };\n\n  const makeSearch = (id: string) => {\n    const searchInput = favorites.filter(el => el.id === id)[0];\n    reduxDispatch(setQuery({ query: searchInput.query }));\n    reduxDispatch(searchVideos({\n      q: searchInput.query,\n      order: searchInput.order ? searchInput.order : 'relevance',\n      resultsPerPage: searchInput.resultsPerPage,\n      maxResults: searchInput.resultsPerPage }));\n\n    routeHistory.push('/');\n    if (!isQueryInFavorites) reduxDispatch(setIsQueryInFavorites({ value: true }));\n  };\n\n  return isLoading\n    ? (\n      <Row\n        justify=\"center\"\n        style={{ paddingTop: 120 }}\n      >\n        <Spin\n          indicator={<LoadingOutlined\n            style={{ fontSize: 48 }}\n            spin />}\n        />\n      </Row>\n    )\n    : (\n      <>\n        <Row\n          justify=\"center\"\n        >\n          <Col\n            xs={{ span: 23 }}\n            sm={{ span: 22 }}\n            md={{ span: 22 }}\n            lg={{ span: 20 }}\n            xxl={{ span: 16 }}\n          >\n            <h2 className={styles.title}>Избранное</h2>\n            {!favorites.length ?\n              <Row\n                justify=\"center\"\n              >\n                <Col flex='auto'>\n                  <Empty description={isError ? 'Ошибка загрузки данных.' : 'У Вас пока нет сохраненных запросов.'}/>\n                </Col>\n              </Row> :\n              <List\n                className={styles.favoritesList}\n                dataSource={favorites}\n                renderItem={item => (\n                  <List.Item\n                    key={item.id}\n                    style={{\n                      flexWrap: 'nowrap',\n                      fontSize: 16,\n                    }}\n                    actions={[\n                      <a\n                        className={styles.editLink}\n                        key=\"list-loadmore-edit\"\n                        onClick={() => {\n                          setActiveItem(favorites.filter(el => el.id === item.id)[0]);\n                          setIsModalVisible(true);\n                        }}\n                      >\n                        Изменить\n                      </a>,\n                      <a\n                        className={styles.deleteLink}\n                        key=\"list-loadmore-more\"\n                        onClick={() => showConfirm(item.query, item.id)}\n                      >\n                        Удалить\n                      </a>,\n                    ]}\n                  >\n                    <Typography.Paragraph\n                      className={styles.itemTitle}\n                      style={{ margin: 0 }}\n                      ellipsis={{ rows: 1, expandable: false }}\n                      onClick={() => showConfirmOpenQuery(item)}\n                    >\n                      {item.query}\n                    </Typography.Paragraph>\n                  </List.Item>\n                )}\n              />\n            }\n          </Col>\n        </Row>\n\n        <Modal\n          title={null}\n          visible={isModalVisible}\n          closable={false}\n          footer={null}\n          onCancel={() => setIsModalVisible(false)}\n        >\n          <h3\n            style={{\n              fontFamily: 'Roboto, sans-serif',\n              textAlign: 'center', fontSize: 18,\n              margin: 0,\n              padding: '15px 0 35px',\n            }}\n          >\n            Изменить запрос\n          </h3>\n          <FavoritesForm\n            initialValues={{\n              id: activeItem.id,\n              title: activeItem.title,\n              query: activeItem.query,\n              order: activeItem.order,\n              resultsPerPage: activeItem.resultsPerPage,\n            }}\n            editMode={true}\n            onSubmit={onEditFavoriteItem}\n            onCancel={() => setIsModalVisible(false)}\n          />\n        </Modal>\n      </>\n    );\n};\n\nexport default FavoritesScreen;\n","import { FC } from 'react';\nimport { Empty, Row, Col } from 'antd';\n\nconst NotFoundScreen: FC = () => {\n  return (\n    <Row\n      justify=\"center\"\n      align=\"middle\"\n      style={{ minHeight: '80vh' }}\n    >\n      <Col flex='auto'>\n        <Empty description='Упс! Запрашиваемая Вами страница не найдена.'/>\n      </Col>\n    </Row>\n  );\n};\n\nexport default NotFoundScreen;\n","import { FC } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport {\r\n  FavoritesScreen,\r\n  LoginScreen,\r\n  SearchScreen,\r\n  NotFoundScreen,\r\n} from '../screens';\r\nimport { useRouteGuard } from './useRouteGuard';\r\n\r\nexport const RouterView: FC = () => {\r\n  useRouteGuard();\r\n\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        exact\r\n        path=\"/\"\r\n        component={SearchScreen}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/login\"\r\n        component={LoginScreen}\r\n      />\r\n      <Route\r\n        exact\r\n        path=\"/favorites\"\r\n        component={FavoritesScreen}\r\n      />\r\n      <Route\r\n        path=\"*\"\r\n        component={NotFoundScreen}\r\n      />\r\n    </Switch>\r\n  );\r\n};\r\n","import { useLocation, useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { RootState } from '../store';\n\nexport const useRouteGuard = () => {\n  const { pathname } = useLocation();\n  const routeHistory = useHistory();\n  const { userId } = useSelector((state: RootState) => state.user);\n\n  if (!userId && pathname !== '/login') {\n    routeHistory.push('/login');\n  }\n\n  return null;\n};\n","import { FC, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Layout, Row, Col } from 'antd';\n\nimport { RootState } from './store';\nimport { getFavoritesFromDbThunk, saveFavoritesToDbThunk } from './store/favoritesSlice';\nimport { setIsMobile } from './store/screenParamsSlice';\n\nimport { RouterView } from './router';\nimport { Header } from './components';\n\ninterface AppProps {}\n\nconst App: FC<AppProps> = () => {\n  const reduxDispatch = useDispatch();\n  const { userId } = useSelector((state: RootState) => state.user);\n  const { favorites, updateDb } = useSelector((state: RootState) => state.favorites);\n  const { isMobile } = useSelector((state: RootState) => state.screenParams);\n  const [screenWidth, setScreenWidth] = useState<number>(window.innerWidth);\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      setScreenWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [reduxDispatch]);\n\n  useEffect(() => {\n    if ((isMobile && screenWidth < 992) || (!isMobile && screenWidth >= 992)) return;\n\n    reduxDispatch(setIsMobile(screenWidth < 992));\n  }, [isMobile, screenWidth, reduxDispatch]);\n\n  useEffect(() => {\n    if (!userId) return;\n    reduxDispatch(getFavoritesFromDbThunk(userId));\n  }, [userId, reduxDispatch]);\n\n  useEffect(() => {\n    if (!updateDb) return;\n    reduxDispatch(saveFavoritesToDbThunk({ favorites, userId }));\n  }, [updateDb, favorites, userId, reduxDispatch]);\n\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      {userId && (\n        <Layout.Header\n          style={{\n            width: '100%',\n            background: '#ffffff',\n            padding: 0,\n            zIndex: 2,\n            position: isMobile ? 'fixed' : 'relative',\n          }}>\n          <Row justify=\"center\">\n            <Col\n              xs={{ span: 23 }}\n              sm={{ span: 22 }}\n              md={{ span: 22 }}\n              lg={{ span: 20 }}\n              xxl={{ span: 16 }}\n            >\n              <Header />\n            </Col>\n          </Row>\n        </Layout.Header>\n      )}\n\n      <Layout.Content style={{ marginTop: isMobile ? 64 : 0 }}>\n        <RouterView />\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport youtubeSearch from './youtubeSearchSlice';\nimport user from './userSlice';\nimport favorites from './favoritesSlice';\nimport screenParams from './screenParamsSlice';\n\nexport const store = configureStore({\n  reducer: {\n    youtubeSearch,\n    user,\n    favorites,\n    screenParams,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n","import ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\nimport { store } from './store';\n\nimport './index.css';\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </ReduxProvider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LoginForm_wrapper__3Nwc8\",\"title\":\"LoginForm_title__3ZQ_I\",\"form\":\"LoginForm_form__m7jhh\",\"label\":\"LoginForm_label__3w4Np\",\"input\":\"LoginForm_input__h9oQA\",\"passwInput\":\"LoginForm_passwInput__1cBSq\",\"inputWrapper\":\"LoginForm_inputWrapper__2ahvN\",\"icon\":\"LoginForm_icon__22dgL\",\"btnWrapper\":\"LoginForm_btnWrapper__E3vYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchTitle\":\"SearchScreen_searchTitle__kiJIs\",\"searchResultTitle\":\"SearchScreen_searchResultTitle__3XPvV\",\"form\":\"SearchScreen_form__1wSrV\",\"input\":\"SearchScreen_input__1oZ0B\",\"inputWrapper\":\"SearchScreen_inputWrapper__1EReX\",\"icon\":\"SearchScreen_icon__2Qdgz\",\"toolTipWrapper\":\"SearchScreen_toolTipWrapper__yI53N\",\"loaderIndicator\":\"SearchScreen_loaderIndicator__2CX4L\",\"searchBtn\":\"SearchScreen_searchBtn__2TLwU\"};"],"sourceRoot":""}